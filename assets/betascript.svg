<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="7300" height="3961"><defs/><g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4167" y="359" width="1248" height="15" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4167" y="373" width="3120" height="2434" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#d6adff" stroke="none" x="4160" y="367" width="3120" height="2433"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4160 367 L 7280 367 L 7280 2800 L 4160 2800 L 4160 367 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#d6adff" stroke="none" x="4160" y="352" width="1248" height="15"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4160 352 L 5408 352 L 5408 367 L 4160 367 L 4160 352 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#d6adff" stroke="none" x="4160" y="366" width="3120" height="2434"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4160 366 L 7280 366 L 7280 2800 L 4160 2800 L 4160 366 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="5686.398681640625" y="386.5">BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6215" y="1231" width="396.8000000000002" height="15" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6215" y="1245" width="992" height="562" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#aa56ff" stroke="none" x="6208" y="1239" width="992" height="561"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6208 1239 L 7200 1239 L 7200 1800 L 6208 1800 L 6208 1239 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#aa56ff" stroke="none" x="6208" y="1224" width="396.8000000000002" height="15"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6208 1224 L 6604.8 1224 L 6604.8 1239 L 6208 1239 L 6208 1224 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#aa56ff" stroke="none" x="6208" y="1238" width="992" height="562"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6208 1238 L 7200 1238 L 7200 1800 L 6208 1800 L 6208 1238 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6643.192626953125" y="1258.5">InverseTrigonometric</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="143" y="63" width="1475.2" height="15" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="143" y="77" width="3688" height="2354" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffc1ad" stroke="none" x="136" y="71" width="3688" height="2353"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 136 71 L 3824 71 L 3824 2424 L 136 2424 L 136 71 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffc1ad" stroke="none" x="136" y="56" width="1475.2" height="15"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 136 56 L 1611.2 56 L 1611.2 71 L 136 71 L 136 56 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffc1ad" stroke="none" x="136" y="70" width="3688" height="2354"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 136 70 L 3824 70 L 3824 2424 L 136 2424 L 136 70 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1950.013671875" y="90.5">Interpreter</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2975" y="1039" width="410.38134765625" height="130" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa182" stroke="none" x="2968" y="1032" width="410.38134765625" height="130"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2968 1032 L 3378.38134765625 1032 L 3378.38134765625 1162 L 2968 1162 L 2968 1032 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2968 1057 L 3378.38134765625 1057" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2968 1095 L 3378.38134765625 1095" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3131.2802734375" y="1051.5">NativeCallable</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2973" y="1074.5">-_arity: final int</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2973" y="1089.5">-_function: final Function</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2973" y="1112.5">«Create»+NativeCallable(_arity: int, _function: Function)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2973" y="1127.5">+arity(): int</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2973" y="1142.5">+callThing(interpreter BSInterpreter, arguments: List&lt;Object&gt;): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2973" y="1157.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2071" y="591" width="354.00146484375" height="698" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa182" stroke="none" x="2064" y="584" width="354.00146484375" height="698"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2064 584 L 2418.00146484375 584 L 2418.00146484375 1282 L 2064 1282 L 2064 584 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2064 622 L 2418.00146484375 622" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2064 705 L 2418.00146484375 705" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2215.8291015625" y="601.5">«Visitor»</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2215.35302734375" y="616.5">Resolver</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="639.5">-_interpreter: final BSInterpreter</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="654.5">-_currentRoutine: RoutineType</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="669.5">-_currentClass: ClassType</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="684.5">-_scopes: final List&lt;HashMap&lt;String, bool&gt;&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="699.5">-_globals: final HashMap&lt;String, bool&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="722.5">«Create»+Resolver(_interpreter: BSInterpreter)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="737.5">+resolveAll(statements: List&lt;Stmt&gt;): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="752.5">-_resolveStmt(s: Stmt): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="767.5">-_resolveExpr(e: Expr): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="782.5">-_beginScope(): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="797.5">-_endScope(): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="812.5">-_declare(name: Token): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="827.5">-_define(name: Token): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="842.5">-_resolveLocal(e: Expr, name: Token): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="857.5">-_resolveRoutine(s: RoutineStmt, type: RoutineType): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="872.5">-_declareParameters(variables: List&lt;Token&gt;): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="887.5">+visitAssignExpr(e: AssignExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="902.5">+visitBinaryExpr(e: BinaryExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="917.5">+visitCallExpr(e: CallExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="932.5">+visitGetExpr(e: GetExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="947.5">+visitGroupingExpr(e: GroupingExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="962.5">+visitLiteralExpr(e: LiteralExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="977.5">+visitUnaryExpr(e: UnaryExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="992.5">+visitVariableExpr(e: VariableExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1007.5">+visitLogicBinaryExpr(e: LogicBinaryExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1022.5">+visitSetExpr(e: SetExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1037.5">+visitThisExpr(e: ThisExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1052.5">+visitSuperExpr(e: SuperExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1067.5">+visitDerivativeExpr(e: DerivativeExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1082.5">+visitIntervalDefinitionExpr(e: IntervalDefinitionExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1097.5">+visitRosterDefinitionExpr(e: RosterDefinitionExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1112.5">+visitBuilderDefinitionExpr(e: BuilderDefinitionExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1127.5">+visitSetBinaryExpr(e: SetBinaryExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1142.5">+visitExpressionStmt(s: ExpressionStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1157.5">+visitPrintStmt(s: PrintStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1172.5">+visitVarStmt(s: VarStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1187.5">+visitBlockStmt(s: BlockStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1202.5">+visiIftStmt(s: IfStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1217.5">+visitRoutineStmt(s: RoutineStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1232.5">+visitWhileStmt(s: Stmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1247.5">+visitReturnStmt(s: Stmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1262.5">+visitClassStmtt(s: ClassStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2069" y="1277.5">+visitDirectiveStmtt(s: DirectiveStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="471" y="95" width="415.45947265625" height="805" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa182" stroke="none" x="464" y="88" width="415.45947265625" height="805"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 464 88 L 879.45947265625 88 L 879.45947265625 893 L 464 893 L 464 88 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 464 113 L 879.45947265625 113" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 464 166 L 879.45947265625 166" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="643.914306640625" y="107.5">BSParser</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="130.5">-_tokens: List&lt;Token&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="145.5">-_interpreter: BSInterpreter</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="160.5">-_current: int</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="183.5">«Create»+BSParser(_tokens: List&lt;Token&gt;, _interpreter: BSInterpreter)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="198.5">+parse(): List&lt;Stmt&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="213.5">-_declaration(): Stmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="228.5">-_classDeclaration(): Stmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="243.5">-_routine(kind: String): RoutineStmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="258.5">-_varDeclaration(): Stmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="273.5">-_statement(): Stmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="288.5">-_expressionStatement(): Stmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="303.5">-_forStatement(): Stmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="318.5">-_ifStatement(): Stmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="333.5">-_printStatement(): Stmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="348.5">-_returnStatement(): Stmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="363.5">-_whileStatement(): Stmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="378.5">-_block(): List&lt;Stmt&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="393.5">-_expression(): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="408.5">-_assigment(): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="423.5">-_or(): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="438.5">-_and(): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="453.5">-_equality(): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="468.5">-_comparison(): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="483.5">-_setBinary(): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="498.5">-_addition(): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="513.5">-_multiplication(): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="528.5">-_exponentiation(): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="543.5">-_unary_left(): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="558.5">-_unary_right(): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="573.5">-_call(): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="588.5">-_finishCall(callee: Expr): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="603.5">-_derivative(): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="618.5">-_primary(): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="633.5">-_setDefinition(): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="648.5">-_parseLeftParentheses(mustBeSet: bool = false): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="663.5">-_parseLeftSquare(mustBeSet: bool = false): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="678.5">-_parseLeftBrace(expectSet: bool = false): Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="693.5">-_match(type: TokenType): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="708.5">-_matchAny(types: List&lt;TokenType&gt;): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="723.5">-_check(type: TokenType): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="738.5">-_checkAny(types: List&lt;TokenTypes&gt;): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="753.5">-_advance(): Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="768.5">-_isAtEnd(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="783.5">-_peek(): Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="798.5">-_previous(): Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="813.5">-_consume(type: TokenType, message: String): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="828.5">-_consumeAny(types: List&lt;TokenType&gt;, message: String): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="843.5">-_error(token: Token, message: String): ParseError</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="858.5">-_synchronize(): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="873.5">-_directive(): Stmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="888.5">-_checkTerminator(type: String): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2855" y="1183" width="540.45751953125" height="160" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa182" stroke="none" x="2848" y="1176" width="540.45751953125" height="160"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2848 1176 L 3388.45751953125 1176 L 3388.45751953125 1336 L 2848 1336 L 2848 1176 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2848 1201 L 3388.45751953125 1201" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2848 1254 L 3388.45751953125 1254" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3082.10107421875" y="1195.5">UserRoutine</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2853" y="1218.5">-_declaration: final RoutineStmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2853" y="1233.5">-_closure: final Environment</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2853" y="1248.5">-_isInitializer: final bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2853" y="1271.5">«Create»+UserRoutine(_declaration RoutineStmt, _closure: Environment, _isInitializer: bool)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2853" y="1286.5">+arity(): int</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2853" y="1301.5">+callThing(interpreter: BSInterpreter, arguments: List&lt;Object&gt;): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2853" y="1316.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2853" y="1331.5">+bind(instance: BSInstance): UserRoutine</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1063" y="327" width="266.232421875" height="145" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa182" stroke="none" x="1056" y="320" width="266.232421875" height="145"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1056 320 L 1322.232421875 320 L 1322.232421875 465 L 1056 465 L 1056 320 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1056 345 L 1322.232421875 345" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1056 383 L 1322.232421875 383" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1138.179443359375" y="339.5">DirectiveManager</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1061" y="362.5">-_globalDirectives: final Map&lt;String, Object&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1061" y="377.5">-_localDirectives: final Map&lt;String, Object&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1061" y="400.5">«Create»+DirectiveManager()</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1061" y="415.5">+isGlobal(dir: String): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1061" y="430.5">+setDirective(dir: String, value: Object): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1061" y="445.5">+setIfGlobal(dir: String, value: Object): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1061" y="460.5">+getDirective(dir: String): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="231" y="311" width="167" height="57" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa182" stroke="none" x="224" y="304" width="167" height="57"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 224 304 L 391 304 L 391 361 L 224 361 L 224 304 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 224 342 L 391 342" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 224 352 L 391 352" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="271.724609375" y="321.5">«Exception»</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="276.075927734375" y="336.5">ParseError</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3239" y="351" width="329.47412109375" height="475" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa182" stroke="none" x="3232" y="344" width="329.47412109375" height="475"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3232 344 L 3561.47412109375 344 L 3561.47412109375 819 L 3232 819 L 3232 344 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3232 369 L 3561.47412109375 369" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3232 482 L 3561.47412109375 482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3363.856201171875" y="363.5">BSScanner</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="386.5">-_source: final String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="401.5">-_tokens: final List&lt;Token&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="416.5">-_charToLexeme: HashMap&lt;String, void Function&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="431.5">-_start: int</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="446.5">-_current: int</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="461.5">-_line: int</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="476.5">-_keywords: Map&lt;String, TokenType&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="499.5">«Create»+BSScanner(_source: String)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="514.5">+scanTokens(): List&lt;Token&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="529.5">-_removeLinebreaks(): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="544.5">-_isAtEnd(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="559.5">-_initializeMap(): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="574.5">-_scanToken(): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="589.5">-_advance(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="604.5">-_addToken(type: TokenType, literal: Object = null): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="619.5">-_match(s: String): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="634.5">-_peek(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="649.5">-_string(): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="664.5">-_isDigit(c: String): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="679.5">-_number(): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="694.5">-_peekNext(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="709.5">-_identifier(): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="724.5">-_isAlpha(c: String): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="739.5">-_isGreek(c: String): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="754.5">-_isMathSymbol(c: String): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="769.5">-_isValidCharacter(c: String): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="784.5">-_isExpandedAlphanumeric(c: String): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="799.5">-_directive(): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="814.5">-isWhitespace(c: String): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1823" y="223" width="357.6259765625" height="263" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa182" stroke="none" x="1816" y="216" width="357.6259765625" height="263"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1816 216 L 2173.6259765625 216 L 2173.6259765625 479 L 1816 479 L 1816 216 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1816 254 L 2173.6259765625 254" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1816 322 L 2173.6259765625 322" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1965.902587890625" y="233.5">«Facade»</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1964.82666015625" y="248.5">BetaScript</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1821" y="271.5">+hadError: static bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1821" y="286.5">+hadRuntimeError: static bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1821" y="301.5">-_interpreter: static BSInterpreter</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1821" y="316.5">+printCallback: static void Function</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1821" y="339.5">+runFile(path: String): static void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1821" y="354.5">+runPrompt(): static void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1821" y="369.5">+runForWeb(source: String): static String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1821" y="384.5">-_run(source: String): static void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1821" y="399.5">+error(value: Object, message: String): static void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1821" y="414.5">-_errorAtLine(line: int, message: String): static void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1821" y="429.5">-_errorAtToken(token: Token, message: String): static void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1821" y="444.5">-_report(line: int, where: String, message: String): static void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1821" y="459.5">+runtimeError(e: RuntimeError): static void</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3159" y="175" width="429.900390625" height="151" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa182" stroke="none" x="3152" y="168" width="429.900390625" height="151"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3152 168 L 3581.900390625 168 L 3581.900390625 319 L 3152 319 L 3152 168 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3152 193 L 3581.900390625 193" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3152 261 L 3581.900390625 261" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3349.605224609375" y="187.5">Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3157" y="210.5">+type: final TokenType</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3157" y="225.5">+lexeme: final String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3157" y="240.5">+literal: final Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3157" y="255.5">+line: final int</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3157" y="278.5">«Create»+Token(type: TokenType, lexeme: String, literal: Object, line: int)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3157" y="293.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2535" y="1159" width="295" height="130" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa182" stroke="none" x="2528" y="1152" width="295" height="130"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2528 1152 L 2823 1152 L 2823 1282 L 2528 1282 L 2528 1152 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2528 1177 L 2823 1177" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2528 1215 L 2823 1215" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2642.25732421875" y="1171.5">BSInstance</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2533" y="1194.5">-_class: final BSClass</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2533" y="1209.5">-_fields: final HashMap&lt;String, Object&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2533" y="1232.5">«Create»+BSInstance(_class: BSClass)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2533" y="1247.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2533" y="1262.5">+get(name: Token): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2533" y="1277.5">+set(name: Token, value: Object): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1375" y="303" width="340.3095703125" height="190" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa182" stroke="none" x="1368" y="296" width="340.3095703125" height="190"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1368 296 L 1708.3095703125 296 L 1708.3095703125 486 L 1368 486 L 1368 296 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1368 321 L 1708.3095703125 321" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1368 359 L 1708.3095703125 359" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1501.665283203125" y="315.5">Environment</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1373" y="338.5">+enclosing: final Environment</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1373" y="353.5">+values: final HashMap&lt;String, Object&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1373" y="376.5">«Create»+Environment(enclosing: Environment)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1373" y="391.5">+define(name: String, value: Object): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1373" y="406.5">+get(name: Token): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1373" y="421.5">+search(name: TokeN): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1373" y="436.5">+assign(name: Token, value: Object): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1373" y="451.5">+getAt(distance: int, name: String): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1373" y="466.5">+assignAt(distance: int, name: Token, value: Object): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1373" y="481.5">-_ancestor(distance: int): Environment</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2479" y="695" width="413.9931640625" height="100" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa182" stroke="none" x="2472" y="688" width="413.9931640625" height="100"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2472 688 L 2885.9931640625 688 L 2885.9931640625 788 L 2472 788 L 2472 688 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2472 726 L 2885.9931640625 726" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2472 736 L 2885.9931640625 736" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2648.645263671875" y="705.5">«abstract»</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2646.83935546875" y="720.5">BSCallable</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2477" y="753.5">«Create»+BSCallable()</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="2477" y="768.5">+arity(): int</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="2477" y="783.5">+callThing(interpreter: BSInterpreter, arguments: List&lt;Object&gt;): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2495" y="903" width="444.322265625" height="160" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa182" stroke="none" x="2488" y="896" width="444.322265625" height="160"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2488 896 L 2932.322265625 896 L 2932.322265625 1056 L 2488 1056 L 2488 896 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2488 921 L 2932.322265625 921" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2488 974 L 2932.322265625 974" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2685.237060546875" y="915.5">BSClass</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2493" y="938.5">+name: final String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2493" y="953.5">-_superclass: final BSClass</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2493" y="968.5">-_methods: final HashMap&lt;String, UserRoutine&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2493" y="991.5">+const BSClass(name: String, _superclass: BSClass, _methods: HashMap)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2493" y="1006.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2493" y="1021.5">+arity(): int</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2493" y="1036.5">+callThing(interpreter: BSInterpreter, arguments: List&lt;Object&gt;): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2493" y="1051.5">+findMethod(name: String): UserRoutine</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1207" y="583" width="425.55224609375" height="683" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa182" stroke="none" x="1200" y="576" width="425.55224609375" height="683"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1200 576 L 1625.55224609375 576 L 1625.55224609375 1259 L 1200 1259 L 1200 576 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1200 614 L 1625.55224609375 614" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1200 682 L 1625.55224609375 682" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1387.6044921875" y="593.5">«Visitor»</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1374.118896484375" y="608.5">BSInterpreter</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="631.5">+globals: Environment</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="646.5">-_locals: final HashMap&lt;Expr, int&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="661.5">-_environment Environment</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="676.5">+directives: DirectiveManager</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="699.5">«Create»+BSInterpreter()</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="714.5">+interpret(statements: List&lt;Stmt&gt;): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="729.5">-_execute(stmt: Stmt): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="744.5">-_stringify(object: Object): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="759.5">-_evaluate(e: Expr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="774.5">-_isTruthy(object: Object): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="789.5">-_isEqual(a: Object, b: Object): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="804.5">-_checkNum(token: Token, value: Object): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="819.5">+executeBlock(statements: List&lt;Stmt&gt;, environment: Environment): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="834.5">+resolve(e: Expr, depth: int): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="849.5">+_lookUpVariable(name: Token, e: Expr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="864.5">+visitAssignExpr(e: AssignExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="879.5">+visitBinaryExpr(e: BinaryExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="894.5">+visitCallExpr(e: CallExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="909.5">+visitGetExpr(e: GetExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="924.5">+visitGroupingExpr(e: GroupingExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="939.5">+visitLiteralExpr(e: LiteralExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="954.5">+visitUnaryExpr(e: UnaryExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="969.5">+visitVariableExpr(e: VariableExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="984.5">+visitLogicBinaryExpr(e: LogicBinaryExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="999.5">+visitSetExpr(e: SetExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1014.5">+visitThisExpr(e: ThisExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1029.5">+visitSuperExpr(e: SuperExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1044.5">+visitDerivativeExpr(e: DerivativeExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1059.5">+visitIntervalDefinitionExpr(e: IntervalDefinitionExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1074.5">+visitRosterDefinitionExpr(e: RosterDefinitionExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1089.5">+visitBuilderDefinitionExpr(e: BuilderDefinitionExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1104.5">+visitSetBinaryExpr(e: SetBinaryExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1119.5">+visitExpressionStmt(s: ExpressionStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1134.5">+visitPrintStmt(s: PrintStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1149.5">+visitVarStmt(s: VarStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1164.5">+visitBlockStmt(s: BlockStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1179.5">+visiIftStmt(s: IfStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1194.5">+visitRoutineStmt(s: RoutineStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1209.5">+visitWhileStmt(s: Stmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1224.5">+visitReturnStmt(s: Stmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1239.5">+visitClassStmtt(s: ClassStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1254.5">+visitDirectiveStmtt(s: DirectiveStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="#ffc1ad" stroke="none" d="M 3640 88 L 3765 88 L 3775 98 L 3775 966 L 3640 966 L 3640 88"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3640 88 L 3765 88 L 3775 98 L 3775 966 L 3640 966 L 3640 88 L 3640 88" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3765 88 L 3765 98 L 3775 98 L 3765 88" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="106">enum TokenType {</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="121">  leftParentheses,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="136">  rightParentheses,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="151">  leftBrace,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="166">  rightBrace,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="181">  leftSquare,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="196">  rightSquare,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="211">  comma,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="226">  dot,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="241">  minus,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="256">  plus,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="271">  semicolon,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="286">  lineBreak,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="301">  slash,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="316">  invertedSlash,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="331">  star,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="346">  factorial,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="361">  apostrophe,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="376">  approx,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="391">  exp,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="406">  verticalBar,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="421">  assigment,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="436">  equals,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="451">  identicallyEquals,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="466">  greater,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="481">  greaterEqual,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="496">  less,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="511">  lessEqual,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="526">  identifier,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="541">  string,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="556">  number,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="571">  hash,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="586">  and,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="601">  belongs,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="616">  classToken,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="631">  contained,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="646">  del,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="661">  disjoined,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="676">  elseToken,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="691">  falseToken,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="706">  forToken,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="721">  ifToken,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="736">  intersection,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="751">  let,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="766">  nil,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="781">  not,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="796">  or,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="811">  print,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="826">  returnToken,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="841">  routine,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="856">  setToken,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="871">  superToken,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="886">  thisToken,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="901">  trueToken,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="916">  union,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="931">  whileToken,</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="946">  EOF</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3645" y="961">}</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="#ffc1ad" stroke="none" d="M 1776 1032 L 1957 1032 L 1967 1042 L 1967 1098 L 1776 1098 L 1776 1032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1776 1032 L 1957 1032 L 1967 1042 L 1967 1098 L 1776 1098 L 1776 1032 L 1776 1032" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1957 1032 L 1957 1042 L 1967 1042 L 1957 1032" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1781" y="1050">enum RoutineType { none,</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1781" y="1063">routine, initializer, method }</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1781" y="1080">enum ClassType { none,</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1781" y="1093">classType, subClassType }</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2039" y="1367" width="672" height="15" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2039" y="1381" width="1680" height="770" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff8056" stroke="none" x="2032" y="1375" width="1680" height="769"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2032 1375 L 3712 1375 L 3712 2144 L 2032 2144 L 2032 1375 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff8056" stroke="none" x="2032" y="1360" width="672" height="15"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2032 1360 L 2704 1360 L 2704 1375 L 2032 1375 L 2032 1360 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff8056" stroke="none" x="2032" y="1374" width="1680" height="770"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2032 1374 L 3712 1374 L 3712 2144 L 2032 2144 L 2032 1374 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2842.372314453125" y="1394.5">Statement</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2071" y="1423" width="352" height="205" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="2064" y="1416" width="352" height="205"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2064 1416 L 2416 1416 L 2416 1621 L 2064 1621 L 2064 1416 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2064 1454 L 2416 1454" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2064 1464 L 2416 1464" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2214.828369140625" y="1433.5">«Visitor»</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="bold" text-decoration="none" x="2208.696533203125" y="1448.5">StmtVisitor</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="2069" y="1481.5">+visitExpressionStmt(s: ExpressionStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="2069" y="1496.5">+visitPrintStmt(s: PrintStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="2069" y="1511.5">+visitVarStmt(s: VarStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="2069" y="1526.5">+visitBlockStmt(s: BlockStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="2069" y="1541.5">+visiIftStmt(s: IfStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="2069" y="1556.5">+visitRoutineStmt(s: RoutineStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="2069" y="1571.5">+visitWhileStmt(s: Stmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="2069" y="1586.5">+visitReturnStmt(s: Stmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="2069" y="1601.5">+visitClassStmtt(s: ClassStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="2069" y="1616.5">+visitDirectiveStmtt(s: DirectiveStmt): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3207" y="1599" width="213.1025390625" height="88" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="3200" y="1592" width="213.1025390625" height="88"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3200 1592 L 3413.1025390625 1592 L 3413.1025390625 1680 L 3200 1680 L 3200 1592 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3200 1617 L 3413.1025390625 1617" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3200 1640 L 3413.1025390625 1640" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3261.035400390625" y="1611.5">ExpressionStmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3205" y="1634.5">+expression: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3205" y="1657.5">+ExpressionStmt(expression: Expr)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3205" y="1672.5">+accept(v: StmtVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2583" y="1671" width="387.72021484375" height="115" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="2576" y="1664" width="387.72021484375" height="115"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2576 1664 L 2963.72021484375 1664 L 2963.72021484375 1779 L 2576 1779 L 2576 1664 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2576 1689 L 2963.72021484375 1689" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2576 1742 L 2963.72021484375 1742" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2746.86572265625" y="1683.5">VarStmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2581" y="1706.5">+name: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2581" y="1721.5">+parameters: final List&lt;Token&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2581" y="1736.5">+initializer: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2581" y="1759.5">+VarStmt(name: Token, parameters: List&lt;Token&gt;, initializer: Expr)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2581" y="1774.5">+accept(v: StmtVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2087" y="1839" width="272" height="85" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="2080" y="1832" width="272" height="85"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2080 1832 L 2352 1832 L 2352 1917 L 2080 1917 L 2080 1832 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2080 1857 L 2352 1857" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2080 1880 L 2352 1880" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2186.74365234375" y="1851.5">BlockStmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2085" y="1874.5">+statements: final List&lt;Stmt&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2085" y="1897.5">«Create»+BlockStmt(statements: List&lt;Stmt&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2085" y="1912.5">+accept(v: StmtVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2527" y="1831" width="479.767578125" height="115" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="2520" y="1824" width="479.767578125" height="115"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2520 1824 L 2999.767578125 1824 L 2999.767578125 1939 L 2520 1939 L 2520 1824 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2520 1849 L 2999.767578125 1849" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2520 1902 L 2999.767578125 1902" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2724.117919921875" y="1843.5">RoutineStmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2525" y="1866.5">+name: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2525" y="1881.5">+parameters: final List&lt;Token&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2525" y="1896.5">+body: List&lt;Stmt&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2525" y="1919.5">«Create»+RoutineStmt(name: Token, parameters: List&lt;Token&gt;, body: List&lt;Stmt&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2525" y="1934.5">+accept(StmtVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3087" y="1439" width="536" height="115" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="3080" y="1432" width="536" height="115"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3080 1432 L 3616 1432 L 3616 1547 L 3080 1547 L 3080 1432 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3080 1457 L 3616 1457" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3080 1510 L 3616 1510" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3318.385009765625" y="1451.5">ClassStmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3085" y="1474.5">+name: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3085" y="1489.5">+superclass: final VariableExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3085" y="1504.5">+methods: final List&lt;RoutineStmt&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3085" y="1527.5">«Create»+ClassStmt(name: Token, superclass: VariableExpr, methods: List&lt;RoutineStmt&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3085" y="1542.5">+accept(v: StmtVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2095" y="1703" width="208" height="88" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="2088" y="1696" width="208" height="88"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2088 1696 L 2296 1696 L 2296 1784 L 2088 1784 L 2088 1696 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2088 1721 L 2296 1721" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2088 1744 L 2296 1744" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2165.273193359375" y="1715.5">PrintStmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2093" y="1738.5">+expression: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2093" y="1761.5">«Create»+PrintStmt(expression)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2093" y="1776.5">+accept(v: StmtVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3127" y="1719" width="411.822265625" height="115" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="3120" y="1712" width="411.822265625" height="115"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3120 1712 L 3531.822265625 1712 L 3531.822265625 1827 L 3120 1827 L 3120 1712 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3120 1737 L 3531.822265625 1737" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3120 1790 L 3531.822265625 1790" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3308.9375" y="1731.5">IfStmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3125" y="1754.5">+condition: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3125" y="1769.5">+thenBranch: final Stmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3125" y="1784.5">+elseBranch: final Stmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3125" y="1807.5">«Create»+IfStmt(condition: Expr, thenBranch: Stmt, elseBranch: Stmt)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3125" y="1822.5">+accept(v: StmtVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3183" y="1999" width="256" height="100" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="3176" y="1992" width="256" height="100"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3176 1992 L 3432 1992 L 3432 2092 L 3176 2092 L 3176 1992 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3176 2017 L 3432 2017" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3176 2055 L 3432 2055" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3271.128662109375" y="2011.5">ReturnStmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3181" y="2034.5">+keyword: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3181" y="2049.5">+value: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3181" y="2072.5">+ReturnStmt(keyword: Token, value: Expr)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3181" y="2087.5">+accept(v: StmtVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2607" y="1999" width="320.05419921875" height="115" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="2600" y="1992" width="320.05419921875" height="115"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2600 1992 L 2920.05419921875 1992 L 2920.05419921875 2107 L 2600 2107 L 2600 1992 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2600 2017 L 2920.05419921875 2017" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2600 2070 L 2920.05419921875 2070" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2730.412109375" y="2011.5">WhileStmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2605" y="2034.5">+token: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2605" y="2049.5">+condition: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2605" y="2064.5">+body: final Stmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2605" y="2087.5">+WhileStmt(token: Token, condition: Expr, body: Stmt)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2605" y="2102.5">+accept(v: StmtVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2079" y="1999" width="326.5478515625" height="135" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="2072" y="1992" width="326.5478515625" height="135"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2072 1992 L 2398.5478515625 1992 L 2398.5478515625 2127 L 2072 2127 L 2072 1992 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2072 2017 L 2398.5478515625 2017" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2072 2055 L 2398.5478515625 2055" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2196.62939453125" y="2011.5">DirectiveStmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2077" y="2034.5">+token: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2077" y="2049.5">+directive: final String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2077" y="2072.5">«Create»+DirectiveStmt(token: Token, directive: String)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2077" y="2087.5">+accept(v: StmtVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="191" y="1287" width="710.4" height="15" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="191" y="1301" width="1776" height="1114" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff8056" stroke="none" x="184" y="1295" width="1776" height="1113"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 184 1295 L 1960 1295 L 1960 2408 L 184 2408 L 184 1295 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff8056" stroke="none" x="184" y="1280" width="710.4" height="15"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 184 1280 L 894.4 1280 L 894.4 1295 L 184 1295 L 184 1280 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff8056" stroke="none" x="184" y="1294" width="1776" height="1114"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 184 1294 L 1960 1294 L 1960 2408 L 184 2408 L 184 1294 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1039.845947265625" y="1314.5">Expression</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="983" y="1783" width="291.166015625" height="100" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="976" y="1776" width="291.166015625" height="100"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 976 1776 L 1267.166015625 1776 L 1267.166015625 1876 L 976 1876 L 976 1776 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 976 1801 L 1267.166015625 1801" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 976 1839 L 1267.166015625 1839" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1088.70849609375" y="1795.5">AssignExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="981" y="1818.5">+name: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="981" y="1833.5">+value: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="981" y="1856.5">«Create»+AssignExpr(name: Token, value: Expr)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="981" y="1871.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="799" y="1343" width="464" height="216" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="792" y="1336" width="464" height="216"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 792 1336 L 1256 1336 L 1256 1552 L 792 1552 L 792 1336 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 792 1361 L 1256 1361" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 792 1371 L 1256 1371" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="bold" text-decoration="none" x="1010.635009765625" y="1355.5">Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="797" y="1388.5">«Create»+Expr()</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="797" y="1403.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="271" y="1735" width="255.7587890625" height="85" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="264" y="1728" width="255.7587890625" height="85"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 264 1728 L 519.7587890625 1728 L 519.7587890625 1813 L 264 1813 L 264 1728 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 264 1753 L 519.7587890625 1753" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 264 1776 L 519.7587890625 1776" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="351.77490234375" y="1747.5">GroupingExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="269" y="1770.5">+expression: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="269" y="1793.5">«Create»+GroupingExpr(expression: Expr)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="269" y="1808.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="263" y="1863" width="322.94873046875" height="115" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="256" y="1856" width="322.94873046875" height="115"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 256 1856 L 578.94873046875 1856 L 578.94873046875 1971 L 256 1971 L 256 1856 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 256 1881 L 578.94873046875 1881" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 256 1934 L 578.94873046875 1934" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="385.685302734375" y="1875.5">BinaryExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="261" y="1898.5">+left: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="261" y="1913.5">+op: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="261" y="1928.5">+right: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="261" y="1951.5">«Create»+BinaryExpr(left: Expr, op: Token, right: Expr)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="261" y="1966.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="887" y="2087" width="415.453125" height="115" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="880" y="2080" width="415.453125" height="115"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 880 2080 L 1295.453125 2080 L 1295.453125 2195 L 880 2195 L 880 2080 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 880 2105 L 1295.453125 2105" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 880 2158 L 1295.453125 2158" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1063.164306640625" y="2099.5">CallExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="885" y="2122.5">+callee: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="885" y="2137.5">+paren: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="885" y="2152.5">+arguments: final List&lt;Expr&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="885" y="2175.5">«Create»+CallExpr(callee: Expr, paren: Token, arguments: List&lt;Expr&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="885" y="2190.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="263" y="2015" width="275.9951171875" height="100" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="256" y="2008" width="275.9951171875" height="100"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 256 2008 L 531.9951171875 2008 L 531.9951171875 2108 L 256 2108 L 256 2008 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 256 2033 L 531.9951171875 2033" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 256 2071 L 531.9951171875 2071" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="370.15576171875" y="2027.5">GetExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="261" y="2050.5">+object: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="261" y="2065.5">+name: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="261" y="2088.5">«Create»+GetExpr(object: Expr, name: Token)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="261" y="2103.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="935" y="1623" width="216.73974609375" height="85" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="928" y="1616" width="216.73974609375" height="85"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 928 1616 L 1144.73974609375 1616 L 1144.73974609375 1701 L 928 1701 L 928 1616 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 928 1641 L 1144.73974609375 1641" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 928 1664 L 1144.73974609375 1664" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1005.30126953125" y="1635.5">LiteralExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="933" y="1658.5">+value: final Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="933" y="1681.5">«Create»+LiteralExpr(value: Object)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="933" y="1696.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="951" y="1975" width="285.39599609375" height="100" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="944" y="1968" width="285.39599609375" height="100"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 944 1968 L 1229.39599609375 1968 L 1229.39599609375 2068 L 944 2068 L 944 1968 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 944 1993 L 1229.39599609375 1993" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 944 2031 L 1229.39599609375 2031" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1055.994384765625" y="1987.5">UnaryExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="949" y="2010.5">+op: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="949" y="2025.5">+operand: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="949" y="2048.5">«Create»+UnaryExpr(op: Token, operand: Expr)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="949" y="2063.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1695" y="1679" width="226.623046875" height="85" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="1688" y="1672" width="226.623046875" height="85"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1688 1672 L 1914.623046875 1672 L 1914.623046875 1757 L 1688 1757 L 1688 1672 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1688 1697 L 1914.623046875 1697" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1688 1720 L 1914.623046875 1720" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1764.580810546875" y="1691.5">VariableExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1693" y="1714.5">+name: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1693" y="1737.5">«Create»+VariableExpr(name: Token)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1693" y="1752.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1631" y="1791" width="300.5478515625" height="115" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="1624" y="1784" width="300.5478515625" height="115"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1624 1784 L 1924.5478515625 1784 L 1924.5478515625 1899 L 1624 1899 L 1624 1784 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1624 1809 L 1924.5478515625 1809" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1624 1862 L 1924.5478515625 1862" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1726.94580078125" y="1803.5">LogicBinaryExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1629" y="1826.5">+left: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1629" y="1841.5">+op: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1629" y="1856.5">+right: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1629" y="1879.5">+LogicBinaryExpr(left: Expr, Token: op, right: Expr)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1629" y="1894.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="223" y="2151" width="346.8095703125" height="115" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="216" y="2144" width="346.8095703125" height="115"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 216 2144 L 562.8095703125 2144 L 562.8095703125 2259 L 216 2259 L 216 2144 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 216 2169 L 562.8095703125 2169" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 216 2222 L 562.8095703125 2222" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="366.283447265625" y="2163.5">SetExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="221" y="2186.5">+object: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="221" y="2201.5">+name: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="221" y="2216.5">+value: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="221" y="2239.5">«Create»+SetExpr(object: Expr, name: Token, value: Expr)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="221" y="2254.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1567" y="2063" width="322.9677734375" height="103" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="1560" y="2056" width="322.9677734375" height="103"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1560 2056 L 1882.9677734375 2056 L 1882.9677734375 2159 L 1560 2159 L 1560 2056 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1560 2081 L 1882.9677734375 2081" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1560 2119 L 1882.9677734375 2119" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1690.77392578125" y="2075.5">SuperExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1565" y="2098.5">+keyword: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1565" y="2113.5">+method: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1565" y="2136.5">«Create»+SuperExpr(keyword: Token, method: Token)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1565" y="2151.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="199" y="1495" width="472.5185546875" height="115" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="192" y="1488" width="472.5185546875" height="115"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 192 1488 L 664.5185546875 1488 L 664.5185546875 1603 L 192 1603 L 192 1488 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 192 1513 L 664.5185546875 1513" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 192 1566 L 664.5185546875 1566" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="385.99658203125" y="1507.5">DerivativeExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="197" y="1530.5">+keyword: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="197" y="1545.5">+derivand: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="197" y="1560.5">+variables: final List&lt;Expr&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="197" y="1583.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="197" y="1598.5">«Create»+DerivativeExpr(keyword: Token, derivand: Expr, variables: List&lt;Expr&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="207" y="1319" width="431.34765625" height="130" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="200" y="1312" width="431.34765625" height="130"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 200 1312 L 631.34765625 1312 L 631.34765625 1442 L 200 1442 L 200 1312 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 200 1337 L 631.34765625 1337" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 200 1405 L 631.34765625 1405" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="353.895263671875" y="1331.5">IntervalDefinitionExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="205" y="1354.5">+left: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="205" y="1369.5">+a: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="205" y="1384.5">+b: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="205" y="1399.5">+right: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="205" y="1422.5">«Create»+IntervalDefinitionExpr(left: Token, a: Expr, b: Expr, right: Token)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="205" y="1437.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="839" y="2247" width="460.9658203125" height="115" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="832" y="2240" width="460.9658203125" height="115"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 832 2240 L 1292.9658203125 2240 L 1292.9658203125 2355 L 832 2355 L 832 2240 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 832 2265 L 1292.9658203125 2265" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 832 2318 L 1292.9658203125 2318" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1002.875244140625" y="2259.5">RosterDefinitionExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="837" y="2282.5">+left: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="837" y="2297.5">+elements: final List&lt;Expr&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="837" y="2312.5">+right: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="837" y="2335.5">«Create»+RosterDefinitionExpr(left: Token, elements: List&lt;Expr&gt;, right: Token)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="837" y="2350.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1327" y="2247" width="614.16650390625" height="145" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="1320" y="2240" width="614.16650390625" height="145"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1320 2240 L 1934.16650390625 2240 L 1934.16650390625 2385 L 1320 2385 L 1320 2240 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1320 2265 L 1934.16650390625 2265" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1320 2348 L 1934.16650390625 2348" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1566.386962890625" y="2259.5">BuilderDefinitionExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1325" y="2282.5">+left: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1325" y="2297.5">+parameters: final List&lt;Token&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1325" y="2312.5">+rule: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1325" y="2327.5">+bar: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1325" y="2342.5">+right: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1325" y="2365.5">«Create»+BuilderDefinitionExpr(left: Token, parameters: List&lt;Token&gt;, rule: Expr, bar: Token, right: Token)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1325" y="2380.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1559" y="1919" width="376.42138671875" height="115" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="1552" y="1912" width="376.42138671875" height="115"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1552 1912 L 1928.42138671875 1912 L 1928.42138671875 2027 L 1552 2027 L 1552 1912 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1552 1937 L 1928.42138671875 1937" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1552 1990 L 1928.42138671875 1990" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1698.665283203125" y="1931.5">SetBinaryExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1557" y="1954.5">+left: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1557" y="1969.5">+operator: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1557" y="1984.5">+right: final Expr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1557" y="2007.5">«Create»+SetBinaryExpr(left: Expr, operator: Token, right: Expr)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1557" y="2022.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1575" y="1327" width="354.00146484375" height="325" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="1568" y="1320" width="354.00146484375" height="325"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1568 1320 L 1922.00146484375 1320 L 1922.00146484375 1645 L 1568 1645 L 1568 1320 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1568 1358 L 1922.00146484375 1358" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1568 1368 L 1922.00146484375 1368" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1719.8291015625" y="1337.5">«Visitor»</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="bold" text-decoration="none" x="1713.694091796875" y="1352.5">ExprVisitor</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1573" y="1385.5">+visitAssignExpr(e: AssignExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1573" y="1400.5">+visitBinaryExpr(e: BinaryExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1573" y="1415.5">+visitCallExpr(e: CallExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1573" y="1430.5">+visitGetExpr(e: GetExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1573" y="1445.5">+visitGroupingExpr(e: GroupingExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1573" y="1460.5">+visitLiteralExpr(e: LiteralExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1573" y="1475.5">+visitUnaryExpr(e: UnaryExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1573" y="1490.5">+visitVariableExpr(e: VariableExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1573" y="1505.5">+visitLogicBinaryExpr(e: LogicBinaryExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1573" y="1520.5">+visitSetExpr(e: SetExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1573" y="1535.5">+visitThisExpr(e: ThisExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1573" y="1550.5">+visitSuperExpr(e: SuperExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1573" y="1565.5">+visitDerivativeExpr(e: DerivativeExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1573" y="1580.5">+visitIntervalDefinitionExpr(e: IntervalDefinitionExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1573" y="1595.5">+visitRosterDefinitionExpr(e: RosterDefinitionExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1573" y="1610.5">+visitBuilderDefinitionExpr(e: BuilderDefinitionExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1573" y="1625.5">+visitSetBinaryExpr(e: SetBinaryExpr): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="583" y="2279" width="220.3388671875" height="95" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="576" y="2272" width="220.3388671875" height="95"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 576 2272 L 796.3388671875 2272 L 796.3388671875 2367 L 576 2367 L 576 2272 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 576 2297 L 796.3388671875 2297" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 576 2320 L 796.3388671875 2320" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="660.52490234375" y="2291.5">ThisExpr</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="581" y="2314.5">+keyword: final Token</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="581" y="2337.5">«Create»+ThisExpr(keyword: Token)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="581" y="2352.5">+accept(v: ExprVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2559" y="1447" width="360.677734375" height="160" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff3f00" stroke="none" x="2552" y="1440" width="360.677734375" height="160"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2552 1440 L 2912.677734375 1440 L 2912.677734375 1600 L 2552 1600 L 2552 1440 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2552 1465 L 2912.677734375 1465" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2552 1475 L 2912.677734375 1475" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="bold" text-decoration="none" x="2718.97705078125" y="1459.5">Stmt</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2557" y="1492.5">«Create»+Stmt()</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="2557" y="1507.5">+accept(v: StmtVisitor): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2296 1697 L 2448 1697 L 2448 1504 L 2552 1504" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2531.674650284752 1512.419035512032 L 2552 1504 L 2531.674650284752 1495.580964487968"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2531.674650284752 1512.419035512032 L 2552 1504 L 2531.674650284752 1495.580964487968 L 2531.674650284752 1512.419035512032" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2352 1874 L 2464 1874 L 2464 1528 L 2552 1528" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2531.674650284752 1536.419035512032 L 2552 1528 L 2531.674650284752 1519.580964487968"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2531.674650284752 1536.419035512032 L 2552 1528 L 2531.674650284752 1519.580964487968 L 2531.674650284752 1536.419035512032" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2399 2059 L 2488 2059 L 2488 1552 L 2552 1552" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2531.674650284752 1560.419035512032 L 2552 1552 L 2531.674650284752 1543.580964487968"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2531.674650284752 1560.419035512032 L 2552 1552 L 2531.674650284752 1543.580964487968 L 2531.674650284752 1560.419035512032" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2812 1664 L 2812 1600" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2820.4190355120318 1620.3253497152482 L 2812 1600 L 2803.5809644879682 1620.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2820.4190355120318 1620.3253497152482 L 2812 1600 L 2803.5809644879682 1620.3253497152482 L 2820.4190355120318 1620.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2560 1824 L 2560 1600" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2568.4190355120318 1620.3253497152482 L 2560 1600 L 2551.5809644879682 1620.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2568.4190355120318 1620.3253497152482 L 2560 1600 L 2551.5809644879682 1620.3253497152482 L 2568.4190355120318 1620.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2600 2032 L 2504 2032 L 2504 1576 L 2552 1576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2531.674650284752 1584.419035512032 L 2552 1576 L 2531.674650284752 1567.580964487968"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2531.674650284752 1584.419035512032 L 2552 1576 L 2531.674650284752 1567.580964487968 L 2531.674650284752 1584.419035512032" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 3176 2042 L 3024 2042 L 3024 1576 L 2913 1576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2933.325349715248 1567.580964487968 L 2913 1576 L 2933.325349715248 1584.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2933.325349715248 1567.580964487968 L 2913 1576 L 2933.325349715248 1584.419035512032 L 2933.325349715248 1567.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 3120 1769 L 3040 1769 L 3040 1536 L 2913 1536" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2933.325349715248 1527.580964487968 L 2913 1536 L 2933.325349715248 1544.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2933.325349715248 1527.580964487968 L 2913 1536 L 2933.325349715248 1544.419035512032 L 2933.325349715248 1527.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 3200 1636 L 3064 1636 L 3064 1504 L 2913 1504" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2933.325349715248 1495.580964487968 L 2913 1504 L 2933.325349715248 1512.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2933.325349715248 1495.580964487968 L 2913 1504 L 2933.325349715248 1512.419035512032 L 2933.325349715248 1495.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 3080 1464 L 2913 1464" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2933.325349715248 1455.580964487968 L 2913 1464 L 2933.325349715248 1472.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2933.325349715248 1455.580964487968 L 2913 1464 L 2933.325349715248 1472.419035512032 L 2933.325349715248 1455.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 631 1368 L 792 1368" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 771.6746502847517 1376.419035512032 L 792 1368 L 771.6746502847517 1359.580964487968"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 771.6746502847517 1376.419035512032 L 792 1368 L 771.6746502847517 1359.580964487968 L 771.6746502847517 1376.419035512032" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 648 1488 L 648 1392 L 792 1392" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 771.6746502847517 1400.419035512032 L 792 1392 L 771.6746502847517 1383.580964487968"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 771.6746502847517 1400.419035512032 L 792 1392 L 771.6746502847517 1383.580964487968 L 771.6746502847517 1400.419035512032" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 391 1728 L 391 1616 L 680 1616 L 680 1416 L 792 1416" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 771.6746502847517 1424.419035512032 L 792 1416 L 771.6746502847517 1407.580964487968"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 771.6746502847517 1424.419035512032 L 792 1416 L 771.6746502847517 1407.580964487968 L 771.6746502847517 1424.419035512032" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 848 2240 L 848 1552" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 856.419035512032 1572.3253497152482 L 848 1552 L 839.580964487968 1572.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 856.419035512032 1572.3253497152482 L 848 1552 L 839.580964487968 1572.3253497152482 L 856.419035512032 1572.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 920 2080 L 920 1552" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 928.419035512032 1572.3253497152482 L 920 1552 L 911.580964487968 1572.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 928.419035512032 1572.3253497152482 L 920 1552 L 911.580964487968 1572.3253497152482 L 928.419035512032 1572.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 536 1856 L 536 1624 L 688 1624 L 688 1448 L 792 1448" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 771.6746502847517 1456.419035512032 L 792 1448 L 771.6746502847517 1439.580964487968"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 771.6746502847517 1456.419035512032 L 792 1448 L 771.6746502847517 1439.580964487968 L 771.6746502847517 1456.419035512032" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 532 2058 L 584 2058 L 584 1632 L 696 1632 L 696 1472 L 792 1472" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 771.6746502847517 1480.419035512032 L 792 1472 L 771.6746502847517 1463.580964487968"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 771.6746502847517 1480.419035512032 L 792 1472 L 771.6746502847517 1463.580964487968 L 771.6746502847517 1480.419035512032" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1016 1616 L 1016 1552" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1024.419035512032 1572.3253497152482 L 1016 1552 L 1007.580964487968 1572.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1024.419035512032 1572.3253497152482 L 1016 1552 L 1007.580964487968 1572.3253497152482 L 1024.419035512032 1572.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 563 2201 L 600 2201 L 600 1640 L 704 1640 L 704 1496 L 792 1496" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 771.6746502847517 1504.419035512032 L 792 1496 L 771.6746502847517 1487.580964487968"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 771.6746502847517 1504.419035512032 L 792 1496 L 771.6746502847517 1487.580964487968 L 771.6746502847517 1504.419035512032" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1168 1776 L 1168 1552" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1176.419035512032 1572.3253497152482 L 1168 1552 L 1159.580964487968 1572.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1176.419035512032 1572.3253497152482 L 1168 1552 L 1159.580964487968 1572.3253497152482 L 1176.419035512032 1572.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 616 2272 L 616 1648 L 712 1648 L 712 1520 L 792 1520" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 771.6746502847517 1528.419035512032 L 792 1520 L 771.6746502847517 1511.580964487968"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 771.6746502847517 1528.419035512032 L 792 1520 L 771.6746502847517 1511.580964487968 L 771.6746502847517 1528.419035512032" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1229 2018 L 1312 2018 L 1312 1520 L 1256 1520" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1276.3253497152482 1511.580964487968 L 1256 1520 L 1276.3253497152482 1528.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1276.3253497152482 1511.580964487968 L 1256 1520 L 1276.3253497152482 1528.419035512032 L 1276.3253497152482 1511.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1552 1944 L 1496 1944 L 1496 1448 L 1256 1448" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1276.3253497152482 1439.580964487968 L 1256 1448 L 1276.3253497152482 1456.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1276.3253497152482 1439.580964487968 L 1256 1448 L 1276.3253497152482 1456.419035512032 L 1276.3253497152482 1439.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1560 2088 L 1456 2088 L 1456 1472 L 1256 1472" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1276.3253497152482 1463.580964487968 L 1256 1472 L 1276.3253497152482 1480.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1276.3253497152482 1463.580964487968 L 1256 1472 L 1276.3253497152482 1480.419035512032 L 1276.3253497152482 1463.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1688 1714 L 1536 1714 L 1536 1400 L 1256 1400" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1276.3253497152482 1391.580964487968 L 1256 1400 L 1276.3253497152482 1408.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1276.3253497152482 1391.580964487968 L 1256 1400 L 1276.3253497152482 1408.419035512032 L 1276.3253497152482 1391.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1624 1800 L 1520 1800 L 1520 1424 L 1256 1424" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1276.3253497152482 1415.580964487968 L 1256 1424 L 1276.3253497152482 1432.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1276.3253497152482 1415.580964487968 L 1256 1424 L 1276.3253497152482 1432.419035512032 L 1276.3253497152482 1415.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1408 2240 L 1408 1496 L 1256 1496" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1276.3253497152482 1487.580964487968 L 1256 1496 L 1276.3253497152482 1504.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1276.3253497152482 1487.580964487968 L 1256 1496 L 1276.3253497152482 1504.419035512032 L 1276.3253497152482 1487.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1568 1344 L 1408 1344 L 1408 1259" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1416.419035512032 1279.3253497152482 L 1408 1259 L 1399.580964487968 1279.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1416.419035512032 1279.3253497152482 L 1408 1259 L 1399.580964487968 1279.3253497152482 L 1416.419035512032 1279.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1922 1482 L 1976 1482 L 1976 1256 L 2064 1256" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2043.6746502847518 1264.419035512032 L 2064 1256 L 2043.6746502847516 1247.580964487968"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2043.6746502847518 1264.419035512032 L 2064 1256 L 2043.6746502847516 1247.580964487968 L 2043.6746502847518 1264.419035512032" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2064 1518 L 2008 1518 L 2008 1224 L 1626 1224" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1646.3253497152482 1215.580964487968 L 1626 1224 L 1646.3253497152482 1232.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1646.3253497152482 1215.580964487968 L 1626 1224 L 1646.3253497152482 1232.419035512032 L 1646.3253497152482 1215.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2168 1416 L 2168 1282" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2176.4190355120318 1302.3253497152482 L 2168 1282 L 2159.5809644879682 1302.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 2176.4190355120318 1302.3253497152482 L 2168 1282 L 2159.5809644879682 1302.3253497152482 L 2176.4190355120318 1302.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#ff2b95" d="M 3640 256 L 3582 256" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1968 1073 L 2064 1073" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1560 576 L 1560 520 L 1966 520 L 1966 479" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 1970.2095177560159 489.16267485762415 L 1966 479 L 1961.7904822439841 489.16267485762415 L 1966 501"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1970.2095177560159 489.16267485762415 L 1966 479 L 1961.7904822439841 489.16267485762415 L 1966 501 L 1970.2095177560159 489.16267485762415" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1555.7904822439841 565.8373251423759 L 1560 576 L 1564.2095177560159 565.8373251423759" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1568.5" y="560.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1974.5" y="506.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 2112 479 L 2112 584" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 2107.790482243984 573.8373251423759 L 2112 584 L 2116.209517756016 573.8373251423759" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2108.5" y="536.5">+uses</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2095.5" y="506.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2095.5" y="568.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 1626 931 L 2064 931" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 2053.837325142376 935.209517756016 L 2064 931 L 2053.837325142376 926.790482243984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1765.5" y="922.5">+manages scope resolution</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 464 332 L 391 332" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 401.16267485762415 327.790482243984 L 391 332 L 401.16267485762415 336.209517756016" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="402.5" y="310.5">+throws</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1719" y="703" width="193.62158203125" height="83" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa182" stroke="none" x="1712" y="696" width="193.62158203125" height="83"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1712 696 L 1905.62158203125 696 L 1905.62158203125 779 L 1712 779 L 1712 696 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1712 734 L 1905.62158203125 734" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 1712 757 L 1905.62158203125 757" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1773.035400390625" y="713.5">«Exception»</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1789.30126953125" y="728.5">Return</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1717" y="751.5">+value: final Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1717" y="774.5">«Create»+Return(value: Object)</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 1626 752 L 1712 752" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 1701.837325142376 756.209517756016 L 1712 752 L 1701.837325142376 747.790482243984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1646.5" y="743.5">+throws</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1515 486 L 1515 576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 1510.7904822439841 565.8373251423759 L 1515 576 L 1519.2095177560159 565.8373251423759 L 1515 554"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1510.7904822439841 565.8373251423759 L 1515 576 L 1519.2095177560159 565.8373251423759 L 1515 554 L 1510.7904822439841 565.8373251423759" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1519.2095177560159 496.16267485762415 L 1515 486 L 1510.7904822439841 496.16267485762415" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1498.5" y="513.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1498.5" y="560.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 1538 296 L 1538 276 L 1738 276 L 1738 391 L 1708 391" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 1718.162674857624 386.790482243984 L 1708 391 L 1718.162674857624 395.209517756016" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1678.5" y="267.5">+encloses</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1547.38134765625" y="280.5">*</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1725.5" y="384.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1220 465 L 1220 576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 1215.7904822439841 565.8373251423759 L 1220 576 L 1224.2095177560159 565.8373251423759 L 1220 554"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1215.7904822439841 565.8373251423759 L 1220 576 L 1224.2095177560159 565.8373251423759 L 1220 554 L 1215.7904822439841 565.8373251423759" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1224.2095177560159 475.16267485762415 L 1220 465 L 1215.7904822439841 475.16267485762415" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1203.5" y="492.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1203.5" y="560.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 879 168 L 3024 168 L 3024 456 L 3232 456" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 3221.837325142376 460.209517756016 L 3232 456 L 3221.837325142376 451.790482243984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2987.5" y="317.5">+processes result</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 1816 248 L 879 248" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 889.1626748576241 243.790482243984 L 879 248 L 889.1626748576241 252.209517756016" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1328.5" y="269.5">+uses</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1790.5" y="241.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="896.5" y="241.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 879 663 L 1072 663 L 1072 465" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 1076.2095177560159 475.16267485762415 L 1072 465 L 1067.7904822439841 475.16267485762415" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="909.5" y="652.5">+sets global directives</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="896.5" y="681.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1080.5" y="492.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 879 104 L 3366 104 L 3366 168" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 3361.790482243984 157.83732514237585 L 3366 168 L 3370.209517756016 157.83732514237585" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3389.5" y="143.5">+processes</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 2174 280 L 3152 280" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 3141.837325142376 284.209517756016 L 3152 280 L 3141.837325142376 275.790482243984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2645.5" y="271.5">+uses</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 2174 336 L 2768 336 L 2768 496 L 3232 496" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 3221.837325142376 500.209517756016 L 3232 496 L 3221.837325142376 491.790482243984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2791.5" y="421.5">+uses</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2191.5" y="354.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3206.5" y="514.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 1568 1376 L 1256 1376" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 1266.162674857624 1371.7904822439841 L 1256 1376 L 1266.162674857624 1380.2095177560159" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1392.5" y="1397.5">+visits</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 2416 1480 L 2552 1480" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 2541.837325142376 1484.2095177560159 L 2552 1480 L 2541.837325142376 1475.7904822439841" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2455.5" y="1468.5">+visits</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 2698 1152 L 2698 1056" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 2702.209517756016 1066.162674857624 L 2698 1056 L 2693.790482243984 1066.162674857624" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2709.5" y="1108.5">+instanciates</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2706.5" y="1136.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2706.5" y="1083.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2685 896 L 2685 788" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2693.4190355120318 808.3253497152483 L 2685 788 L 2676.5809644879682 808.3253497152483"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2693.4190355120318 808.3253497152483 L 2685 788 L 2676.5809644879682 808.3253497152483 L 2693.4190355120318 808.3253497152483" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2960 1176 L 2960 776 L 2886 776" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2906.325349715248 767.580964487968 L 2886 776 L 2906.325349715248 784.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2906.325349715248 767.580964487968 L 2886 776 L 2906.325349715248 784.419035512032 L 2906.325349715248 767.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2984 1032 L 2984 744 L 2886 744" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2906.325349715248 735.580964487968 L 2886 744 L 2906.325349715248 752.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2906.325349715248 735.580964487968 L 2886 744 L 2906.325349715248 752.419035512032 L 2906.325349715248 735.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 1626 608 L 1680 608 L 1680 544 L 2678 544 L 2678 688" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 2673.790482243984 677.8373251423759 L 2678 688 L 2682.209517756016 677.8373251423759" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1662.5" y="535.5">+uses</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1643.5" y="626.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2662.58544921875" y="672.5">*</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 1512 1259 L 1512 1312 L 2568 1312 L 2568 1282" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 2572.209517756016 1292.162674857624 L 2568 1282 L 2563.790482243984 1292.162674857624" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2022.5" y="1303.5">+uses</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1495.5" y="1286.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2577.220458984375" y="1309.5">*</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="287" y="2503" width="787.2" height="15" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="287" y="2517" width="1968" height="1114" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffffd8" stroke="none" x="280" y="2511" width="1968" height="1113"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 280 2511 L 2248 2511 L 2248 3624 L 280 3624 L 280 2511 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffffd8" stroke="none" x="280" y="2496" width="787.2" height="15"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 280 2496 L 1067.2 2496 L 1067.2 2511 L 280 2511 L 280 2496 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffffd8" stroke="none" x="280" y="2510" width="1968" height="1114"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 280 2510 L 2248 2510 L 2248 3624 L 280 3624 L 280 2510 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1248.4609375" y="2530.5">Logic</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1055" y="2783" width="258.17724609375" height="177" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffff91" stroke="none" x="1048" y="2776" width="258.17724609375" height="177"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1048 2776 L 1306.17724609375 2776 L 1306.17724609375 2953 L 1048 2953 L 1048 2776 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1048 2801 L 1306.17724609375 2801" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1048 2811 L 1306.17724609375 2811" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="bold" text-decoration="none" x="1129.3955078125" y="2795.5">LogicExpression</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1053" y="2828.5">«Create»+LogicExpression()</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1053" y="2843.5">«get»+alwaysTrue(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1053" y="2858.5">«get»+alwaysFalse(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1053" y="2873.5">+isSolution(p: HashMap): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1053" y="2888.5">+containsSolution(s: BSSet): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1053" y="2903.5">+everyElementIsSolution(s: BSSet): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1053" y="2918.5">«get»+solution(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1053" y="2933.5">«get»+parameters(): SplayTreeSet&lt;String&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1053" y="2948.5">«get»+foundEverySolution(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="335" y="2655" width="356.93408203125" height="220" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffff91" stroke="none" x="328" y="2648" width="356.93408203125" height="220"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 328 2648 L 684.93408203125 2648 L 684.93408203125 2868 L 328 2868 L 328 2648 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 328 2673 L 684.93408203125 2673" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 328 2711 L 684.93408203125 2711" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="494.901611328125" y="2667.5">And</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="333" y="2690.5">+left: final LogicExpression</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="333" y="2705.5">+right: final LogicExpression</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="333" y="2728.5">«Create»+And(left: LogicExpression, right: LogicExpression)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="333" y="2743.5">«get»+alwaysTrue(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="333" y="2758.5">«get»+alwaysFalse(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="333" y="2773.5">+isSolution(p: HashMap): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="333" y="2788.5">+containsSolution(s: BSSet): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="333" y="2803.5">+everyElementIsSolution(s: BSSet): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="333" y="2818.5">«get»+solution(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="333" y="2833.5">«get»+parameters(): SplayTreeSet&lt;String&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="333" y="2848.5">«get»+foundEverySolution(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="333" y="2863.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1887" y="3079" width="310.68505859375" height="87" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffff91" stroke="none" x="1880" y="3072" width="310.68505859375" height="87"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1880 3072 L 2190.68505859375 3072 L 2190.68505859375 3159 L 1880 3159 L 1880 3072 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1880 3097 L 2190.68505859375 3097" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1880 3107 L 2190.68505859375 3107" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2018.718017578125" y="3091.5">Equal</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1885" y="3124.5">«Create»+Equal(left: BSFunction, right: BSFunction)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1885" y="3139.5">+compare(_left: num, _right: num): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1885" y="3154.5">«get»+type(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1447" y="2735" width="347.5205078125" height="265" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffff91" stroke="none" x="1440" y="2728" width="347.5205078125" height="265"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1440 2728 L 1787.5205078125 2728 L 1787.5205078125 2993 L 1440 2993 L 1440 2728 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1440 2753 L 1787.5205078125 2753" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1440 2806 L 1787.5205078125 2806" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="bold" text-decoration="none" x="1578.718017578125" y="2747.5">Comparison</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1445" y="2770.5">+left: final BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1445" y="2785.5">+right: final BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1445" y="2800.5">-_foundEverySolution: bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1445" y="2823.5">«Create»+Comparison(left: BSFunction, right: BSFunction)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1445" y="2838.5">+compare(_left: num, _right: num)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1445" y="2853.5">«get»#type(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1445" y="2868.5">«get»+alwaysTrue(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1445" y="2883.5">«get»+alwaysFalse(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1445" y="2898.5">+isSolution(p: HashMap): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1445" y="2913.5">+containsSolution(s: BSSet): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1445" y="2928.5">+everyElementIsSolution(s: BSSet): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1445" y="2943.5">«get»+solution(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1445" y="2958.5">«get»+parameters(): SplayTreeSet&lt;String&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1445" y="2973.5">«get»+foundEverySolution(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1445" y="2988.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1871" y="2583" width="334.52685546875" height="87" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffff91" stroke="none" x="1864" y="2576" width="334.52685546875" height="87"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1864 2576 L 2198.52685546875 2576 L 2198.52685546875 2663 L 1864 2663 L 1864 2576 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1864 2601 L 2198.52685546875 2601" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1864 2611 L 2198.52685546875 2611" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2002.718017578125" y="2595.5">LessThan</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1869" y="2628.5">«Create»+LessThan(left: BSFunction, right: BSFunction)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1869" y="2643.5">+compare(_left: num, _right: num): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1869" y="2658.5">«get»+type(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1855" y="2983" width="369.19775390625" height="87" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffff91" stroke="none" x="1848" y="2976" width="369.19775390625" height="87"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1848 2976 L 2217.19775390625 2976 L 2217.19775390625 3063 L 1848 3063 L 1848 2976 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1848 3001 L 2217.19775390625 3001" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1848 3011 L 2217.19775390625 3011" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1986.718017578125" y="2995.5">GreaterOrEqual</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1853" y="3028.5">«Create»+GreaterOrEqual(left: BSFunction, right: BSFunction)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1853" y="3043.5">+compare(_left: num, _right: num): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1853" y="3058.5">«get»+type(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="735" y="2959" width="258.17724609375" height="205" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffff91" stroke="none" x="728" y="2952" width="258.17724609375" height="205"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 728 2952 L 986.17724609375 2952 L 986.17724609375 3157 L 728 3157 L 728 2952 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 728 2977 L 986.17724609375 2977" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 728 3000 L 986.17724609375 3000" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="846.9736328125" y="2971.5">Not</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="733" y="2994.5">+operand: final LogicExpression</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="733" y="3017.5">«Create»+Not(operand: LogicExpression)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="733" y="3032.5">«get»+alwaysTrue(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="733" y="3047.5">«get»+alwaysFalse(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="733" y="3062.5">+isSolution(p: HashMap): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="733" y="3077.5">+containsSolution(s: BSSet): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="733" y="3092.5">+everyElementIsSolution(s: BSSet): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="733" y="3107.5">«get»+solution(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="733" y="3122.5">«get»+parameters(): SplayTreeSet&lt;String&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="733" y="3137.5">«get»+foundEverySolution(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="733" y="3152.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1871" y="2679" width="330.9150390625" height="87" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffff91" stroke="none" x="1864" y="2672" width="330.9150390625" height="87"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1864 2672 L 2194.9150390625 2672 L 2194.9150390625 2759 L 1864 2759 L 1864 2672 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1864 2697 L 2194.9150390625 2697" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1864 2707 L 2194.9150390625 2707" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2002.718017578125" y="2691.5">NotEqual</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1869" y="2724.5">«Create»+NotEqual(left: BSFunction, right: BSFunction)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1869" y="2739.5">+compare(_left: num, _right: num): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1869" y="2754.5">«get»+type(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1863" y="2887" width="352.5859375" height="87" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffff91" stroke="none" x="1856" y="2880" width="352.5859375" height="87"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1856 2880 L 2208.5859375 2880 L 2208.5859375 2967 L 1856 2967 L 1856 2880 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1856 2905 L 2208.5859375 2905" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1856 2915 L 2208.5859375 2915" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1994.718017578125" y="2899.5">LessOrEqual</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1861" y="2932.5">«Create»+LessOrEqual(left: BSFunction, right: BSFunction)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1861" y="2947.5">+compare(_left: num, _right: num): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1861" y="2962.5">«get»+type(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1863" y="2783" width="351.138671875" height="87" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffff91" stroke="none" x="1856" y="2776" width="351.138671875" height="87"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1856 2776 L 2207.138671875 2776 L 2207.138671875 2863 L 1856 2863 L 1856 2776 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1856 2801 L 2207.138671875 2801" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1856 2811 L 2207.138671875 2811" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1994.718017578125" y="2795.5">GreaterThan</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1861" y="2828.5">«Create»+GreaterThan(left: BSFunction, right: BSFunction)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1861" y="2843.5">+compare(_left: num, _right: num): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1861" y="2858.5">«get»+type(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="711" y="2535" width="348.244140625" height="220" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffff91" stroke="none" x="704" y="2528" width="348.244140625" height="220"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 704 2528 L 1052.244140625 2528 L 1052.244140625 2748 L 704 2748 L 704 2528 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 704 2553 L 1052.244140625 2553" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 704 2591 L 1052.244140625 2591" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="870.901611328125" y="2547.5">Or</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="709" y="2570.5">+left: final LogicExpression</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="709" y="2585.5">+right: final LogicExpression</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="709" y="2608.5">«Create»+Or(left: LogicExpression, right: LogicExpression)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="709" y="2623.5">«get»+alwaysTrue(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="709" y="2638.5">«get»+alwaysFalse(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="709" y="2653.5">+isSolution(p: HashMap): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="709" y="2668.5">+containsSolution(s: BSSet): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="709" y="2683.5">+everyElementIsSolution(s: BSSet): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="709" y="2698.5">«get»+solution(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="709" y="2713.5">«get»+parameters(): SplayTreeSet&lt;String&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="709" y="2728.5">«get»+foundEverySolution(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="709" y="2743.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="415" y="2951" width="258.17724609375" height="205" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffff91" stroke="none" x="408" y="2944" width="258.17724609375" height="205"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 408 2944 L 666.17724609375 2944 L 666.17724609375 3149 L 408 3149 L 408 2944 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 408 2969 L 666.17724609375 2969" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 408 2992 L 666.17724609375 2992" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="511.07275390625" y="2963.5">Constant</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="413" y="2986.5">+value: final bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="413" y="3009.5">«Create»+Constant(value: bool)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="413" y="3024.5">«get»+alwaysTrue(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="413" y="3039.5">«get»+alwaysFalse(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="413" y="3054.5">+isSolution(p: HashMap): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="413" y="3069.5">+containsSolution(s: BSSet): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="413" y="3084.5">+everyElementIsSolution(s: BSSet): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="413" y="3099.5">«get»+solution(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="413" y="3114.5">«get»+parameters(): SplayTreeSet&lt;String&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="413" y="3129.5">«get»+foundEverySolution(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="413" y="3144.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="383" y="3199" width="620.8" height="15" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="383" y="3213" width="1552" height="410" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffff49" stroke="none" x="376" y="3207" width="1552" height="409"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 376 3207 L 1928 3207 L 1928 3616 L 376 3616 L 376 3207 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffff49" stroke="none" x="376" y="3192" width="620.8" height="15"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 376 3192 L 996.8 3192 L 996.8 3207 L 376 3207 L 376 3192 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffff49" stroke="none" x="376" y="3206" width="1552" height="410"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 376 3206 L 1928 3206 L 1928 3616 L 376 3616 L 376 3206 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1130.325927734375" y="3226.5">Solvers</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1519" y="3255" width="362.48193359375" height="191" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#d8d800" stroke="none" x="1512" y="3248" width="362.48193359375" height="191"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1512 3248 L 1874.48193359375 3248 L 1874.48193359375 3439 L 1512 3439 L 1512 3248 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1512 3273 L 1874.48193359375 3273" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1512 3356 L 1874.48193359375 3356" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1615.31396484375" y="3267.5">SingleVariableLinearSolver</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1517" y="3290.5">-_comp: Comparison</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1517" y="3305.5">-_left: BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1517" y="3320.5">+a: num</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1517" y="3335.5">+b: num</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1517" y="3350.5">+invertedInequality: bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1517" y="3373.5">«Create»+SingleVariableLinearSolver(expr: LogicExpression)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1517" y="3388.5">#appliesInternal(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1517" y="3403.5">#attemptSolveInternal(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1517" y="3418.5">-_extractCoefficients(term: BSFunction): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1517" y="3433.5">«get»+everySolutionFound(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1111" y="3319" width="243.47607421875" height="160" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#d8d800" stroke="none" x="1104" y="3312" width="243.47607421875" height="160"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1104 3312 L 1347.47607421875 3312 L 1347.47607421875 3472 L 1104 3472 L 1104 3312 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1104 3337 L 1347.47607421875 3337" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1104 3375 L 1347.47607421875 3375" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="bold" text-decoration="none" x="1207.31396484375" y="3331.5">Solver</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1109" y="3354.5">+expr: final LogicExpression</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1109" y="3369.5">#doesApply: bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1109" y="3392.5">«Create»+Solver(expr: LogicExpression)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1109" y="3407.5">«get»+everySolutionFound(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1109" y="3422.5">+attemptSolve(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1109" y="3437.5">+applies(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1109" y="3452.5">#attemptSolveInternal(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="1109" y="3467.5">#appliesInternal(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1535" y="3463" width="326.3447265625" height="130" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#d8d800" stroke="none" x="1528" y="3456" width="326.3447265625" height="130"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1528 3456 L 1854.3447265625 3456 L 1854.3447265625 3586 L 1528 3586 L 1528 3456 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1528 3481 L 1854.3447265625 3481" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 1528 3504 L 1854.3447265625 3504" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1631.31396484375" y="3475.5">SingleVariableSolver</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1533" y="3498.5">-_everySolutionFound: bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1533" y="3521.5">«Create»+SingleVariableSolver(expr: LogicExpression)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1533" y="3536.5">#appliesInternal(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1533" y="3551.5">#attemptSolveInternal(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1533" y="3566.5">«get»+everySolutionFound(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 642 2944 L 642 2910 L 1048 2910" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1027.6746502847518 2918.4190355120318 L 1048 2910 L 1027.6746502847516 2901.5809644879682"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1027.6746502847518 2918.4190355120318 L 1048 2910 L 1027.6746502847516 2901.5809644879682 L 1027.6746502847518 2918.4190355120318" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 685 2800 L 1048 2800" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1027.6746502847518 2808.4190355120318 L 1048 2800 L 1027.6746502847516 2791.5809644879682"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1027.6746502847518 2808.4190355120318 L 1048 2800 L 1027.6746502847516 2791.5809644879682 L 1027.6746502847518 2808.4190355120318" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1440 2871 L 1306 2871" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1326.3253497152482 2862.5809644879682 L 1306 2871 L 1326.3253497152482 2879.4190355120318"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1326.3253497152482 2862.5809644879682 L 1306 2871 L 1326.3253497152482 2879.4190355120318 L 1326.3253497152482 2862.5809644879682" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1880 3104 L 1613 3104 L 1613 2993" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1621.419035512032 3013.325349715248 L 1613 2993 L 1604.580964487968 3013.325349715248"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1621.419035512032 3013.325349715248 L 1613 2993 L 1604.580964487968 3013.325349715248 L 1621.419035512032 3013.325349715248" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1848 3024 L 1720 3024 L 1720 2993" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1728.419035512032 3013.325349715248 L 1720 2993 L 1711.580964487968 3013.325349715248"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1728.419035512032 3013.325349715248 L 1720 2993 L 1711.580964487968 3013.325349715248 L 1728.419035512032 3013.325349715248" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1856 2808 L 1788 2808" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1808.3253497152482 2799.5809644879682 L 1788 2808 L 1808.3253497152482 2816.4190355120318"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1808.3253497152482 2799.5809644879682 L 1788 2808 L 1808.3253497152482 2816.4190355120318 L 1808.3253497152482 2799.5809644879682" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1856 2912 L 1788 2912" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1808.3253497152482 2903.5809644879682 L 1788 2912 L 1808.3253497152482 2920.4190355120318"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1808.3253497152482 2903.5809644879682 L 1788 2912 L 1808.3253497152482 2920.4190355120318 L 1808.3253497152482 2903.5809644879682" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1864 2615 L 1613 2615 L 1613 2728" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1604.580964487968 2707.674650284752 L 1613 2728 L 1621.419035512032 2707.674650284752"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1604.580964487968 2707.674650284752 L 1613 2728 L 1621.419035512032 2707.674650284752 L 1604.580964487968 2707.674650284752" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1864 2688 L 1696 2688 L 1696 2728" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1687.580964487968 2707.674650284752 L 1696 2728 L 1704.419035512032 2707.674650284752"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1687.580964487968 2707.674650284752 L 1696 2728 L 1704.419035512032 2707.674650284752 L 1687.580964487968 2707.674650284752" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1052 2700 L 1136 2700 L 1136 2776" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1127.580964487968 2755.674650284752 L 1136 2776 L 1144.419035512032 2755.674650284752"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1127.580964487968 2755.674650284752 L 1136 2776 L 1144.419035512032 2755.674650284752 L 1127.580964487968 2755.674650284752" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 986 3102 L 1174 3102 L 1174 2953" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1182.419035512032 2973.325349715248 L 1174 2953 L 1165.580964487968 2973.325349715248"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1182.419035512032 2973.325349715248 L 1174 2953 L 1165.580964487968 2973.325349715248 L 1182.419035512032 2973.325349715248" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1512 3396 L 1347 3396" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1367.3253497152482 3387.5809644879682 L 1347 3396 L 1367.3253497152482 3404.4190355120318"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1367.3253497152482 3387.5809644879682 L 1347 3396 L 1367.3253497152482 3404.4190355120318 L 1367.3253497152482 3387.5809644879682" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1528 3531 L 1225 3531 L 1225 3472" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1233.419035512032 3492.325349715248 L 1225 3472 L 1216.580964487968 3492.325349715248"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 1233.419035512032 3492.325349715248 L 1225 3472 L 1216.580964487968 3492.325349715248 L 1233.419035512032 3492.325349715248" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 1104 3441 L 933 3441" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 943.1626748576241 3436.790482243984 L 933 3441 L 943.1626748576241 3445.209517756016" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="994.5" y="3462.5">+throws</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="471" y="3335" width="468.900390625" height="113" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#d8d800" stroke="none" x="464" y="3328" width="468.900390625" height="113"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 464 3328 L 932.900390625 3328 L 932.900390625 3441 L 464 3441 L 464 3328 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 464 3366 L 932.900390625 3366" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#545400" d="M 464 3404 L 932.900390625 3404" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="662.6748046875" y="3345.5">«Exception»</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="636.68115234375" y="3360.5">BetascriptSolverError</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="3383.5">+message: final String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="3398.5">+expression; final LogicExpression</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="3421.5">«Create»+BetascriptSolverError(message: String, expression: LogicExpression)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="469" y="3436.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#ff00ff" d="M 1224 3312 L 1224 2953" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1229.5" y="3135.5">+solves</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1233.220458984375" y="3296.5">*</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1232.5" y="2980.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1192 2776 L 1192 2624 L 1052 2624" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 1062.162674857624 2619.790482243984 L 1052 2624 L 1062.162674857624 2628.209517756016 L 1074 2624"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1062.162674857624 2619.790482243984 L 1052 2624 L 1062.162674857624 2628.209517756016 L 1074 2624 L 1062.162674857624 2619.790482243984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1187.7904822439841 2765.837325142376 L 1192 2776 L 1196.2095177560159 2765.837325142376" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1200.5" y="2760.5">2</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1069.5" y="2617.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1104 2953 L 1104 2992 L 986 2992" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 996.1626748576241 2987.790482243984 L 986 2992 L 996.1626748576241 2996.209517756016 L 1008 2992"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 996.1626748576241 2987.790482243984 L 986 2992 L 996.1626748576241 2996.209517756016 L 1008 2992 L 996.1626748576241 2987.790482243984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1108.2095177560159 2963.162674857624 L 1104 2953 L 1099.7904822439841 2963.162674857624" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1087.5" y="2980.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1003.5" y="2985.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1048 2848 L 685 2848" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 695.1626748576241 2843.790482243984 L 685 2848 L 695.1626748576241 2852.209517756016 L 707 2848"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 695.1626748576241 2843.790482243984 L 685 2848 L 695.1626748576241 2852.209517756016 L 707 2848 L 695.1626748576241 2843.790482243984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1037.837325142376 2852.209517756016 L 1048 2848 L 1037.837325142376 2843.790482243984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1022.5" y="2841.5">2</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="702.5" y="2841.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#ff00ff" d="M 1552 2993 L 1552 3248" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1544.5" y="3125.5">+solves</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1535.5" y="3020.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1535.5" y="3232.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 1200 1232 L 64 1232 L 64 2880 L 1048 2880" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 1037.837325142376 2884.209517756016 L 1048 2880 L 1037.837325142376 2875.790482243984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="61.5" y="2061.5">+uses</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2303" y="2511" width="620.8000000000002" height="15" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2303" y="2525" width="1552" height="762" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#a3ffd1" stroke="none" x="2296" y="2519" width="1552" height="761"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2296 2519 L 3848 2519 L 3848 3280 L 2296 3280 L 2296 2519 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#a3ffd1" stroke="none" x="2296" y="2504" width="620.8000000000002" height="15"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2296 2504 L 2916.8 2504 L 2916.8 2519 L 2296 2519 L 2296 2504 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#a3ffd1" stroke="none" x="2296" y="2518" width="1552" height="762"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2296 2518 L 3848 2518 L 3848 3280 L 2296 3280 L 2296 2518 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3058.99365234375" y="2538.5">Sets</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2311" y="3375" width="678.4000000000001" height="15" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2311" y="3389" width="1696" height="562" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa3ff" stroke="none" x="2304" y="3383" width="1696" height="561"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2304 3383 L 4000 3383 L 4000 3944 L 2304 3944 L 2304 3383 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa3ff" stroke="none" x="2304" y="3368" width="678.4000000000001" height="15"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2304 3368 L 2982.4 3368 L 2982.4 3383 L 2304 3383 L 2304 3368 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa3ff" stroke="none" x="2304" y="3382" width="1696" height="562"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2304 3382 L 4000 3382 L 4000 3944 L 2304 3944 L 2304 3382 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3139.36181640625" y="3402.5">Utils</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2335" y="3431" width="204.80000000000018" height="15" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2335" y="3445" width="512" height="418" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff6dff" stroke="none" x="2328" y="3439" width="512" height="417"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2328 3439 L 2840 3439 L 2840 3856 L 2328 3856 L 2328 3439 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff6dff" stroke="none" x="2328" y="3424" width="204.80000000000018" height="15"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2328 3424 L 2532.8 3424 L 2532.8 3439 L 2328 3439 L 2328 3424 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff6dff" stroke="none" x="2328" y="3438" width="512" height="418"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2328 3438 L 2840 3438 L 2840 3856 L 2328 3856 L 2328 3438 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2564.731689453125" y="3458.5">Tuples</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3487" y="3455" width="188.4000000000001" height="15" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3487" y="3469" width="471" height="273" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff6dff" stroke="none" x="3480" y="3463" width="471" height="272"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 3480 3463 L 3951 3463 L 3951 3735 L 3480 3735 L 3480 3463 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff6dff" stroke="none" x="3480" y="3448" width="188.4000000000001" height="15"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 3480 3448 L 3668.4 3448 L 3668.4 3463 L 3480 3463 L 3480 3448 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff6dff" stroke="none" x="3480" y="3462" width="471" height="273"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 3480 3462 L 3951 3462 L 3951 3735 L 3480 3735 L 3480 3462 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3636.735107421875" y="3482.5">ExpressionSoureGenerator</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2895" y="3439" width="208" height="15" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2895" y="3453" width="520" height="402" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff6dff" stroke="none" x="2888" y="3447" width="520" height="401"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2888 3447 L 3408 3447 L 3408 3848 L 2888 3848 L 2888 3447 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff6dff" stroke="none" x="2888" y="3432" width="208" height="15"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2888 3432 L 3096 3432 L 3096 3447 L 2888 3447 L 2888 3432 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff6dff" stroke="none" x="2888" y="3446" width="520" height="402"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2888 3446 L 3408 3446 L 3408 3848 L 2888 3848 L 2888 3446 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3110.780517578125" y="3466.5">MethodTable</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2415" y="3520" width="221.5498046875" height="100" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2591.037109375" y="3487" width="54.5126953125" height="37" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff00ff" stroke="none" x="2408" y="3513" width="221.5498046875" height="100"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2408 3513 L 2629.5498046875 3513 L 2629.5498046875 3613 L 2408 3613 L 2408 3513 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2408 3538 L 2629.5498046875 3538" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2408 3576 L 2629.5498046875 3576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2507.2158203125" y="3532.5">Pair</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2413" y="3555.5">+first: T</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2413" y="3570.5">+second: S</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2413" y="3593.5">«Create»+Pair(first: F, second: S)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2413" y="3608.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff00ff" stroke="none" x="2584.037109375" y="3480" width="54.5126953125" height="37"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2584.037109375 3480 L 2638.5498046875 3480 L 2638.5498046875 3517 L 2584.037109375 3517 L 2584.037109375 3480 Z Z" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2589.037109375" y="3497.5">T: class</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2589.037109375" y="3512.5">S: class</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2535" y="3703" width="268.0146484375" height="115" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2757.501953125" y="3655" width="54.5126953125" height="52" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff00ff" stroke="none" x="2528" y="3696" width="268.0146484375" height="115"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2528 3696 L 2796.0146484375 3696 L 2796.0146484375 3811 L 2528 3811 L 2528 3696 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2528 3721 L 2796.0146484375 3721" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2528 3774 L 2796.0146484375 3774" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2651.054443359375" y="3715.5">Trio</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2533" y="3738.5">+first: F</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2533" y="3753.5">+second: S</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2533" y="3768.5">+third: T</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2533" y="3791.5">«Create»+Trio(first: F, second: S, third: T)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2533" y="3806.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff00ff" stroke="none" x="2750.501953125" y="3648" width="54.5126953125" height="52"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2750.501953125 3648 L 2805.0146484375 3648 L 2805.0146484375 3700 L 2750.501953125 3700 L 2750.501953125 3648 Z Z" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2755.501953125" y="3665.5">F: class</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2755.501953125" y="3680.5">S: class</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2755.501953125" y="3695.5">T: class</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2919" y="3528" width="447.03759765625" height="145" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3319.8076171875" y="3495" width="55.22998046875" height="37" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff00ff" stroke="none" x="2912" y="3521" width="447.03759765625" height="145"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2912 3521 L 3359.03759765625 3521 L 3359.03759765625 3666 L 2912 3666 L 2912 3521 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2912 3546 L 3359.03759765625 3546" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 2912 3569 L 3359.03759765625 3569" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3098.29931640625" y="3540.5">MethodTable</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2917" y="3563.5">#hashMap: final HashMap&lt;String, Function&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2917" y="3586.5">«Create»+MethodTable()</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2917" y="3601.5">+addMethod(t1: Type, t2: Type, method: Function): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2917" y="3616.5">+call(first: D, second: D): R</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2917" y="3631.5">+addMethodsInLine(t1: Type, t2: List&lt;Type&gt;, method: Function): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2917" y="3646.5">+addMethodsInColumn(t1: LIst&lt;Type&gt;, t2: Type, method: Function): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2917" y="3661.5">#findMethod(t1: Type, t2: Type): Function</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff00ff" stroke="none" x="3312.8076171875" y="3488" width="55.22998046875" height="37"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 3312.8076171875 3488 L 3368.03759765625 3488 L 3368.03759765625 3525 L 3312.8076171875 3525 L 3312.8076171875 3488 Z Z" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3317.8076171875" y="3505.5">R: class</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3317.8076171875" y="3520.5">D: class</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3015" y="3735" width="328.76318359375" height="57" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff00ff" stroke="none" x="3008" y="3728" width="328.76318359375" height="57"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 3008 3728 L 3336.76318359375 3728 L 3336.76318359375 3785 L 3008 3785 L 3008 3728 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 3008 3753 L 3336.76318359375 3753" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 3008 3763 L 3336.76318359375 3763" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3102.28759765625" y="3747.5">ComutativeMethodTable</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3013" y="3780.5">+addMethod(t1: Type, t2: Type, method: Function): void</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3535" y="3527" width="388.73583984375" height="85" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ff00ff" stroke="none" x="3528" y="3520" width="388.73583984375" height="85"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 3528 3520 L 3916.73583984375 3520 L 3916.73583984375 3605 L 3528 3605 L 3528 3520 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 3528 3545 L 3916.73583984375 3545" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#5b005b" d="M 3528 3583 L 3916.73583984375 3583" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3692.737060546875" y="3539.5">NodeType</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3533" y="3562.5">+name: final String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3533" y="3577.5">+fields: final List&lt;List&lt;String&gt;&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3533" y="3600.5">«Create»+NodeType(name: final String, fields: List&lt;List&lt;String&gt;&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 3184 3728 L 3184 3666" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 3192.4190355120318 3686.325349715248 L 3184 3666 L 3175.5809644879682 3686.325349715248"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 3192.4190355120318 3686.325349715248 L 3184 3666 L 3175.5809644879682 3686.325349715248 L 3192.4190355120318 3686.325349715248" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 1960 2240 L 3864 2240 L 3864 3448" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 3859.790482243984 3437.837325142376 L 3864 3448 L 3868.209517756016 3437.837325142376" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3807.5" y="2245.5">+Generates source code</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 3712 1648 L 3928 1648 L 3928 3448" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 3923.790482243984 3437.837325142376 L 3928 3448 L 3932.209517756016 3437.837325142376" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3751.5" y="1635.5">+Generaters soruce code</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2623" y="2551" width="221.77978515625" height="98" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#00d8b4" stroke="none" x="2616" y="2544" width="221.77978515625" height="98"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2616 2544 L 2837.77978515625 2544 L 2837.77978515625 2642 L 2616 2642 L 2616 2544 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2616 2582 L 2837.77978515625 2582" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2616 2605 L 2837.77978515625 2605" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2691.114501953125" y="2561.5">«Exception»</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2675.59130859375" y="2576.5">SetDefinitionError</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2621" y="2599.5">+message: final String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2621" y="2622.5">+SetDefinitionError(message: String)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2621" y="2637.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2919" y="3063" width="256.50146484375" height="115" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#00d8b4" stroke="none" x="2912" y="3056" width="256.50146484375" height="115"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2912 3056 L 3168.50146484375 3056 L 3168.50146484375 3171 L 2912 3171 L 2912 3056 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2912 3081 L 3168.50146484375 3081" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2912 3104 L 3168.50146484375 3104" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3013.51123046875" y="3075.5">SetUnion</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2917" y="3098.5">+subsets: final LIst&lt;BSSet&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2917" y="3121.5">«Create»+SetUnion(subsets: List&lt;BSSet&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2917" y="3136.5">+belongs(x: BSFunction): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2917" y="3151.5">+complement(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2917" y="3166.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 3008 3056 L 3008 2976" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 3016.4190355120318 2996.325349715248 L 3008 2976 L 2999.5809644879682 2996.325349715248"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 3016.4190355120318 2996.325349715248 L 3008 2976 L 2999.5809644879682 2996.325349715248 L 3016.4190355120318 2996.325349715248" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 3128 2976 L 3128 3056" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 3123.790482243984 3045.837325142376 L 3128 3056 L 3132.209517756016 3045.837325142376 L 3128 3034"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 3123.790482243984 3045.837325142376 L 3128 3056 L 3132.209517756016 3045.837325142376 L 3128 3034 L 3123.790482243984 3045.837325142376" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 3132.209517756016 2986.162674857624 L 3128 2976 L 3123.790482243984 2986.162674857624" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3105.5" y="3003.5">2..*</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3111.5" y="3040.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="#a3ffd1" stroke="none" d="M 2880 3208 L 3149 3208 L 3159 3218 L 3159 3244 L 2880 3244 L 2880 3208"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2880 3208 L 3149 3208 L 3159 3218 L 3159 3244 L 2880 3244 L 2880 3208 L 2880 3208" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 3149 3208 L 3149 3218 L 3159 3218 L 3149 3208" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2885" y="3226">setUnion(Subsets: Iterable&lt;BSSet&gt;): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#ff2b95" d="M 3012 3208 L 3012 3171" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#a3ffd1" stroke="none" d="M 2584 2760 L 2780 2760 L 2790 2770 L 2790 2848 L 2584 2848 L 2584 2760"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2584 2760 L 2780 2760 L 2790 2770 L 2790 2848 L 2584 2848 L 2584 2760 L 2584 2760" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2780 2760 L 2780 2770 L 2790 2770 L 2780 2760" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2589" y="2778">the sublcasses of BSSet are not</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2589" y="2791">instanciated directly through their</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2589" y="2804">constructors, but rather through</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2589" y="2817">the builder functions provided,</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2589" y="2830">which perform type checks and</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2589" y="2843">simplifications</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#ff2b95" d="M 2791 2804 L 2832 2804" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3263" y="2551" width="357.1689453125" height="115" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#00d8b4" stroke="none" x="3256" y="2544" width="357.1689453125" height="115"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 3256 2544 L 3613.1689453125 2544 L 3613.1689453125 2659 L 3256 2659 L 3256 2544 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 3256 2569 L 3613.1689453125 2569" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 3256 2592 L 3613.1689453125 2592" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3405.68359375" y="2563.5">RosterSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3261" y="2586.5">+elements: final SplayTreeSet&lt;BSFunction&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3261" y="2609.5">«Create»+RosterSet(elements: SplayTreeSet&lt;BSFunction&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3261" y="2624.5">+belongs(x: BSFunction): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3261" y="2639.5">+complement(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3261" y="2654.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="#a3ffd1" stroke="none" d="M 3312 2680 L 3629 2680 L 3639 2690 L 3639 2716 L 3312 2716 L 3312 2680"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 3312 2680 L 3629 2680 L 3639 2690 L 3639 2716 L 3312 2716 L 3312 2680 L 3312 2680" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 3629 2680 L 3629 2690 L 3639 2690 L 3629 2680" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3317" y="2698">rosterSet(elements: Iterable&lt;BSFunction&gt;): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#ff2b95" d="M 3502 2680 L 3502 2659" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 3256 2624 L 3120 2624 L 3120 2680" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 3111.5809644879682 2659.674650284752 L 3120 2680 L 3128.4190355120318 2659.674650284752"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 3111.5809644879682 2659.674650284752 L 3120 2680 L 3128.4190355120318 2659.674650284752 L 3111.5809644879682 2659.674650284752" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3319" y="2927" width="497.85205078125" height="190" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#00d8b4" stroke="none" x="3312" y="2920" width="497.85205078125" height="190"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 3312 2920 L 3809.85205078125 2920 L 3809.85205078125 3110 L 3312 3110 L 3312 2920 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 3312 2945 L 3809.85205078125 2945" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 3312 3013 L 3809.85205078125 3013" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3539.610595703125" y="2939.5">Interval</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3317" y="2962.5">+leftClosed: final bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3317" y="2977.5">+rightClosed: final bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3317" y="2992.5">+BSFunction: final a</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3317" y="3007.5">+BSFunction: final b</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3317" y="3030.5">«Create»+Interval(a: BSFunction, b: BSFunction, leftCLosed: bool, rightClosed: bool)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3317" y="3045.5">«Create»+Interval.closed(a: BSFunction, b: BSFunction)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3317" y="3060.5">«Create»+Interval.open(a: BSFunction, b: BSFunction)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3317" y="3075.5">+belongs(x: BSFunction): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3317" y="3090.5">+complement(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3317" y="3105.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="#a3ffd1" stroke="none" d="M 3232 3136 L 3709 3136 L 3719 3146 L 3719 3172 L 3232 3172 L 3232 3136"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 3232 3136 L 3709 3136 L 3719 3146 L 3719 3172 L 3232 3172 L 3232 3136 L 3232 3136" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 3709 3136 L 3709 3146 L 3719 3146 L 3709 3136" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237" y="3154">interval(a: BSFunction, b: BSFunction, leftClosed: bool,  rightClosed: bool): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#ff2b95" d="M 3670 3110 L 3670 3136" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2839" y="2687" width="400" height="296" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#00d8b4" stroke="none" x="2832" y="2680" width="400" height="296"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2832 2680 L 3232 2680 L 3232 2976 L 2832 2976 L 2832 2680 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2832 2718 L 3232 2718" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2832 2816 L 3232 2816" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3001.648681640625" y="2697.5">«abstract»</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="bold" text-decoration="none" x="3013.57275390625" y="2712.5">BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2837" y="2735.5">-_relativeComplements: final MethodTable&lt;BSSet, BSSet&gt;</text><path fill="none" stroke="#000000" d="M 2837 2735.5 L 3175.9013671875 2735.5" stroke-miterlimit="10"/></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2837" y="2750.5">-_contains: final MethodTable&lt;bool, BSSet&gt;</text><path fill="none" stroke="#000000" d="M 2837 2750.5 L 3089.94140625 2750.5" stroke-miterlimit="10"/></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2837" y="2765.5">-_unions: final ComutativeMethodTable&lt;BSSet, BSSet&gt;</text><path fill="none" stroke="#000000" d="M 2837 2765.5 L 3157.85498046875 2765.5" stroke-miterlimit="10"/></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2837" y="2780.5">-_intersections: final ComutativeMethodTable&lt;BSSet, BSSet&gt;</text><path fill="none" stroke="#000000" d="M 2837 2780.5 L 3192.52587890625 2780.5" stroke-miterlimit="10"/></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2837" y="2795.5">-_disjoined: final ComutativeMethodTable&lt;bool, BSSet&gt;</text><path fill="none" stroke="#000000" d="M 2837 2795.5 L 3158.5849609375 2795.5" stroke-miterlimit="10"/></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2837" y="2810.5">+R: BSSet {readOnly}</text><path fill="none" stroke="#000000" d="M 2837 2810.5 L 2963.1025390625 2810.5" stroke-miterlimit="10"/></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2837" y="2833.5">«Create»+BSSet()</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="2837" y="2848.5">+complement(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="2837" y="2863.5">+belongs(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2837" y="2878.5">+relativeComplement(other: BSSet): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2837" y="2893.5">+union(other: BSSet): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2837" y="2908.5">+intersection(other: BSSet): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2837" y="2923.5">+contains(BSet: b): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2837" y="2938.5">+disjoined(b: BSSet): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2837" y="2953.5">+belongs(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2383" y="2663" width="179.89794921875" height="115" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#00d8b4" stroke="none" x="2376" y="2656" width="179.89794921875" height="115"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2376 2656 L 2555.89794921875 2656 L 2555.89794921875 2771 L 2376 2771 L 2376 2656 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2376 2694 L 2555.89794921875 2694" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2376 2704 L 2555.89794921875 2704" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2431.614501953125" y="2673.5">«Singleton»</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2437.771728515625" y="2688.5">EmptySet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2381" y="2721.5">«Create»-EmptySet._()</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2381" y="2736.5">+complement(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2381" y="2751.5">+belongs(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2381" y="2766.5">+belongs(): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3375" y="2767" width="333.0859375" height="130" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#00d8b4" stroke="none" x="3368" y="2760" width="333.0859375" height="130"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 3368 2760 L 3701.0859375 2760 L 3701.0859375 2890 L 3368 2890 L 3368 2760 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 3368 2785 L 3701.0859375 2785" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 3368 2823 L 3701.0859375 2823" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3459.745361328125" y="2779.5">IntensionalSetIntersection</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3373" y="2802.5">+first: final BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3373" y="2817.5">+second: final BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3373" y="2840.5">+IntensionalSetIntersection(first: BSSet, second: BSSet)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3373" y="2855.5">+belongs(x: BSFunction): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3373" y="2870.5">+complement(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3373" y="2885.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2343" y="2871" width="425.33642578125" height="145" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#00d8b4" stroke="none" x="2336" y="2864" width="425.33642578125" height="145"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2336 2864 L 2761.33642578125 2864 L 2761.33642578125 3009 L 2336 3009 L 2336 2864 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2336 2889 L 2761.33642578125 2889" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2336 2927 L 2761.33642578125 2927" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2518.6787109375" y="2883.5">BuilderSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2341" y="2906.5">+parameters: final List&lt;Variable&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2341" y="2921.5">+rule: final LogicExpression</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2341" y="2944.5">«Create»+BuilderSet(rule: LogicExpression, parameters: List&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2341" y="2959.5">+belongs(x: BSFunction): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2341" y="2974.5">«get»+knownElements(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2341" y="2989.5">+complement(): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2341" y="3004.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 3368 2848 L 3232 2848" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 3252.325349715248 2839.5809644879682 L 3232 2848 L 3252.325349715248 2856.4190355120318"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 3252.325349715248 2839.5809644879682 L 3232 2848 L 3252.325349715248 2856.4190355120318 L 3252.325349715248 2839.5809644879682" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#a3ffd1" stroke="none" d="M 3672 2648 L 3797 2648 L 3807 2658 L 3807 2723 L 3672 2723 L 3672 2648"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 3672 2648 L 3797 2648 L 3807 2658 L 3807 2723 L 3672 2723 L 3672 2648 L 3672 2648" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 3797 2648 L 3797 2658 L 3807 2658 L 3797 2648" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3677" y="2666">shouldn't be</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3677" y="2679">instanciated directly:</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3677" y="2692">is a result of set</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3677" y="2705">operations</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#ff2b95" d="M 3701 2760 L 3744 2760 L 3744 2724" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2556 2737 L 2832 2737" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2811.674650284752 2745.4190355120318 L 2832 2737 L 2811.674650284752 2728.5809644879682"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2811.674650284752 2745.4190355120318 L 2832 2737 L 2811.674650284752 2728.5809644879682 L 2811.674650284752 2745.4190355120318" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#a3ffd1" stroke="none" d="M 2304 2592 L 2565 2592 L 2575 2602 L 2575 2628 L 2304 2628 L 2304 2592"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2304 2592 L 2565 2592 L 2575 2602 L 2575 2628 L 2304 2628 L 2304 2592 L 2304 2592" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2565 2592 L 2565 2602 L 2575 2602 L 2565 2592" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2309" y="2610">const EmptySet emptySet = EmptySet._();</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#ff2b95" d="M 2484 2656 L 2484 2629" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#a3ffd1" stroke="none" d="M 2336 3032 L 2765 3032 L 2775 3042 L 2775 3055 L 2336 3055 L 2336 3032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2336 3032 L 2765 3032 L 2775 3042 L 2775 3055 L 2336 3055 L 2336 3032 L 2336 3032" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#005128" d="M 2765 3032 L 2765 3042 L 2775 3042 L 2765 3032" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2341" y="3050">builderSet(rule: LogicExpression, parameters: List&lt;Variable&gt;): BSSet</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#ff2b95" d="M 2442 3009 L 2442 3032" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2761 2928 L 2832 2928" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2811.674650284752 2936.4190355120318 L 2832 2928 L 2811.674650284752 2919.5809644879682"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2811.674650284752 2936.4190355120318 L 2832 2928 L 2811.674650284752 2919.5809644879682 L 2811.674650284752 2936.4190355120318" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 3232 2792 L 3368 2792" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 3357.837325142376 2796.209517756016 L 3368 2792 L 3357.837325142376 2787.790482243984 L 3346 2792"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 3357.837325142376 2796.209517756016 L 3368 2792 L 3357.837325142376 2787.790482243984 L 3346 2792 L 3357.837325142376 2796.209517756016" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 3242.162674857624 2787.790482243984 L 3232 2792 L 3242.162674857624 2796.209517756016" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3249.5" y="2810.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3342.5" y="2810.5">2</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 3312 2944 L 3232 2944" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 3252.325349715248 2935.5809644879682 L 3232 2944 L 3252.325349715248 2952.4190355120318"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 3252.325349715248 2935.5809644879682 L 3232 2944 L 3252.325349715248 2952.4190355120318 L 3252.325349715248 2935.5809644879682" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 3256 2600 L 2838 2600" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 2848.162674857624 2595.790482243984 L 2838 2600 L 2848.162674857624 2604.209517756016" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3023.5" y="2621.5">+throws</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 464 704 L 22 704 L 22 2496 L 2686 2496 L 2686 2544" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 2681.790482243984 2533.837325142376 L 2686 2544 L 2690.209517756016 2533.837325142376" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="-0.5" y="2487.5">+throws</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1240 2776 L 1240 2552 L 2272 2552 L 2272 2944 L 2336 2944" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 2325.837325142376 2948.209517756016 L 2336 2944 L 2325.837325142376 2939.790482243984 L 2314 2944"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 2325.837325142376 2948.209517756016 L 2336 2944 L 2325.837325142376 2939.790482243984 L 2314 2944 L 2325.837325142376 2948.209517756016" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 1235.7904822439841 2765.837325142376 L 1240 2776 L 1244.2095177560159 2765.837325142376" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1248.5" y="2760.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2310.5" y="2962.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 1200 1104 L 104 1104 L 104 2448 L 2888 2448 L 2888 2680" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 2883.790482243984 2669.837325142376 L 2888 2680 L 2892.209517756016 2669.837325142376" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="86.5" y="2439.5">+uses</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 2912 3584 L 2872 3584 L 2872 2976" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 2876.209517756016 2986.162674857624 L 2872 2976 L 2867.790482243984 2986.162674857624 L 2872 2998"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 2876.209517756016 2986.162674857624 L 2872 2976 L 2867.790482243984 2986.162674857624 L 2872 2998 L 2876.209517756016 2986.162674857624" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 2901.837325142376 3588.209517756016 L 2912 3584 L 2901.837325142376 3579.790482243984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2886.5" y="3577.5">2</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2880.5" y="3003.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 3337 3776 L 3464 3776 L 3464 3320 L 3184 3320 L 3184 2976" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 3188.209517756016 2986.162674857624 L 3184 2976 L 3179.790482243984 2986.162674857624 L 3184 2998"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 3188.209517756016 2986.162674857624 L 3184 2976 L 3179.790482243984 2986.162674857624 L 3184 2998 L 3188.209517756016 2986.162674857624" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 3347.162674857624 3771.790482243984 L 3337 3776 L 3347.162674857624 3780.209517756016" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3354.5" y="3794.5">3</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3192.5" y="3003.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 1288 3312 L 1288 3184 L 2856 3184 L 2856 2976" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 2860.209517756016 2986.162674857624 L 2856 2976 L 2851.790482243984 2986.162674857624" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 1306 2953 L 1306 3168 L 2840 3168 L 2840 2976" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 2844.209517756016 2986.162674857624 L 2840 2976 L 2835.790482243984 2986.162674857624" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6143" y="2255" width="396.8000000000002" height="15" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6143" y="2269" width="992" height="498" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#aa56ff" stroke="none" x="6136" y="2263" width="992" height="497"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6136 2263 L 7128 2263 L 7128 2760 L 6136 2760 L 6136 2263 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#aa56ff" stroke="none" x="6136" y="2248" width="396.8000000000002" height="15"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6136 2248 L 6532.8 2248 L 6532.8 2263 L 6136 2263 L 6136 2248 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#aa56ff" stroke="none" x="6136" y="2262" width="992" height="498"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6136 2262 L 7128 2262 L 7128 2760 L 6136 2760 L 6136 2262 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6601.293212890625" y="2282.5">Hyperbolic</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4607" y="2239" width="368" height="15" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4607" y="2253" width="920" height="530" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#aa56ff" stroke="none" x="4600" y="2247" width="920" height="529"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4600 2247 L 5520 2247 L 5520 2776 L 4600 2776 L 4600 2247 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#aa56ff" stroke="none" x="4600" y="2232" width="368" height="15"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4600 2232 L 4968 2232 L 4968 2247 L 4600 2247 L 4600 2232 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#aa56ff" stroke="none" x="4600" y="2246" width="920" height="530"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4600 2246 L 5520 2246 L 5520 2776 L 4600 2776 L 4600 2246 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="5006.171875" y="2266.5">Inverse Hyperbolic</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6223" y="455" width="377.60000000000036" height="15" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6223" y="469" width="944" height="458" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#aa56ff" stroke="none" x="6216" y="463" width="944" height="457"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6216 463 L 7160 463 L 7160 920 L 6216 920 L 6216 463 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#aa56ff" stroke="none" x="6216" y="448" width="377.60000000000036" height="15"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6216 448 L 6593.6 448 L 6593.6 463 L 6216 463 L 6216 448 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#aa56ff" stroke="none" x="6216" y="462" width="944" height="458"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6216 462 L 7160 462 L 7160 920 L 6216 920 L 6216 462 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6648.508056640625" y="482.5">Trigonometric</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="5103" y="2431" width="395.70556640625" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="5096" y="2424" width="395.70556640625" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5096 2424 L 5491.70556640625 2424 L 5491.70556640625 2541 L 5096 2541 L 5096 2424 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5096 2449 L 5491.70556640625 2449" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5096 2459 L 5491.70556640625 2459" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="5271.464599609375" y="2443.5">ArCscH</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5101" y="2476.5">«Create»+ArCscH._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5101" y="2491.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5101" y="2506.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5101" y="2521.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5101" y="2536.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6775" y="1487" width="402.935546875" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6768" y="1480" width="402.935546875" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6768 1480 L 7170.935546875 1480 L 7170.935546875 1597 L 6768 1597 L 6768 1480 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6768 1505 L 7170.935546875 1505" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6768 1515 L 7170.935546875 1515" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6948.523681640625" y="1499.5">ArcCsc</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6773" y="1532.5">«Create»+ArcCsc._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6773" y="1547.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6773" y="1562.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6773" y="1577.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6773" y="1592.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6247" y="1439" width="403.66552734375" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6240" y="1432" width="403.66552734375" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6240 1432 L 6643.66552734375 1432 L 6643.66552734375 1549 L 6240 1549 L 6240 1432 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6240 1457 L 6643.66552734375 1457" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6240 1467 L 6643.66552734375 1467" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6420.523681640625" y="1451.5">ArcCos</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="1484.5">«Create»+ArcCos._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="1499.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="1514.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="1529.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="1544.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6231" y="1279" width="399.33642578125" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6224" y="1272" width="399.33642578125" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6224 1272 L 6623.33642578125 1272 L 6623.33642578125 1389 L 6224 1389 L 6224 1272 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6224 1297 L 6623.33642578125 1297" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6224 1307 L 6623.33642578125 1307" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6404.523681640625" y="1291.5">ArcSin</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6229" y="1324.5">«Create»+ArcSin._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6229" y="1339.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6229" y="1354.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6229" y="1369.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6229" y="1384.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6247" y="1575" width="401.50732421875" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6240" y="1568" width="401.50732421875" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6240 1568 L 6641.50732421875 1568 L 6641.50732421875 1685 L 6240 1685 L 6240 1568 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6240 1593 L 6641.50732421875 1593" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6240 1603 L 6641.50732421875 1603" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6420.523681640625" y="1587.5">ArcTan</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="1620.5">«Create»+ArcTan._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="1635.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="1650.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="1665.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="1680.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6775" y="1327" width="402.9482421875" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6768" y="1320" width="402.9482421875" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6768 1320 L 7170.9482421875 1320 L 7170.9482421875 1437 L 6768 1437 L 6768 1320 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6768 1345 L 7170.9482421875 1345" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6768 1355 L 7170.9482421875 1355" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6948.523681640625" y="1339.5">ArcSec</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6773" y="1372.5">«Create»+ArcSec._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6773" y="1387.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6773" y="1402.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6773" y="1417.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6773" y="1432.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6775" y="1623" width="400.77734375" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6768" y="1616" width="400.77734375" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6768 1616 L 7168.77734375 1616 L 7168.77734375 1733 L 6768 1733 L 6768 1616 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6768 1641 L 7168.77734375 1641" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6768 1651 L 7168.77734375 1651" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6948.523681640625" y="1635.5">ArcCtg</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6773" y="1668.5">«Create»+ArcCtg._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6773" y="1683.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6773" y="1698.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6773" y="1713.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6773" y="1728.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6247" y="503" width="379.83642578125" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6240" y="496" width="379.83642578125" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6240 496 L 6619.83642578125 496 L 6619.83642578125 613 L 6240 613 L 6240 496 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6240 521 L 6619.83642578125 521" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6240 531 L 6619.83642578125 531" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6420.523681640625" y="515.5">Sin</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="548.5">«Create»+Sin._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="563.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="578.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="593.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="608.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6759" y="783" width="383.4482421875" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6752" y="776" width="383.4482421875" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6752 776 L 7135.4482421875 776 L 7135.4482421875 893 L 6752 893 L 6752 776 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6752 801 L 7135.4482421875 801" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6752 811 L 7135.4482421875 811" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6932.523681640625" y="795.5">Sec</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6757" y="828.5">«Create»+Sec._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6757" y="843.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6757" y="858.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6757" y="873.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6757" y="888.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6247" y="775" width="383.435546875" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6240" y="768" width="383.435546875" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6240 768 L 6623.435546875 768 L 6623.435546875 885 L 6240 885 L 6240 768 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6240 793 L 6623.435546875 793" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6240 803 L 6623.435546875 803" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6420.523681640625" y="787.5">Csc</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="820.5">«Create»+Csc._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="835.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="850.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="865.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="880.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6767" y="503" width="381.27734375" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6760" y="496" width="381.27734375" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6760 496 L 7141.27734375 496 L 7141.27734375 613 L 6760 613 L 6760 496 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6760 521 L 7141.27734375 521" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6760 531 L 7141.27734375 531" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6940.523681640625" y="515.5">Ctg</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6765" y="548.5">«Create»+Ctg._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6765" y="563.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6765" y="578.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6765" y="593.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6765" y="608.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6247" y="639" width="384.16552734375" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6240" y="632" width="384.16552734375" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6240 632 L 6624.16552734375 632 L 6624.16552734375 749 L 6240 749 L 6240 632 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6240 657 L 6624.16552734375 657" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6240 667 L 6624.16552734375 667" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6420.523681640625" y="651.5">Cos</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="684.5">«Create»+Cos._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="699.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="714.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="729.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6245" y="744.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6767" y="639" width="382.00732421875" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6760" y="632" width="382.00732421875" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6760 632 L 7142.00732421875 632 L 7142.00732421875 749 L 6760 749 L 6760 632 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6760 657 L 7142.00732421875 657" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6760 667 L 7142.00732421875 667" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6940.523681640625" y="651.5">Tan</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6765" y="684.5">«Create»+Tan._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6765" y="699.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6765" y="714.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6765" y="729.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6765" y="744.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6183" y="2295" width="392.1064453125" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6176" y="2288" width="392.1064453125" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6176 2288 L 6568.1064453125 2288 L 6568.1064453125 2405 L 6176 2405 L 6176 2288 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6176 2313 L 6568.1064453125 2313" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6176 2323 L 6568.1064453125 2323" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6357.964599609375" y="2307.5">SinH</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6181" y="2340.5">«Create»+SinH._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6181" y="2355.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6181" y="2370.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6181" y="2385.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6181" y="2400.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6175" y="2599" width="391.3955078125" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6168" y="2592" width="391.3955078125" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6168 2592 L 6559.3955078125 2592 L 6559.3955078125 2709 L 6168 2709 L 6168 2592 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6168 2617 L 6559.3955078125 2617" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6168 2627 L 6559.3955078125 2627" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6348.523681640625" y="2611.5">TanH</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6173" y="2644.5">«Create»+TanH._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6173" y="2659.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6173" y="2674.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6173" y="2689.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6173" y="2704.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6167" y="2455" width="393.5537109375" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6160" y="2448" width="393.5537109375" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6160 2448 L 6553.5537109375 2448 L 6553.5537109375 2565 L 6160 2565 L 6160 2448 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6160 2473 L 6553.5537109375 2473" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6160 2483 L 6553.5537109375 2483" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6340.523681640625" y="2467.5">CosH</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6165" y="2500.5">«Create»+CosH._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6165" y="2515.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6165" y="2530.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6165" y="2545.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6165" y="2560.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6719" y="2495" width="392.82373046875" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6712" y="2488" width="392.82373046875" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6712 2488 L 7104.82373046875 2488 L 7104.82373046875 2605 L 6712 2605 L 6712 2488 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6712 2513 L 7104.82373046875 2513" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6712 2523 L 7104.82373046875 2523" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6892.523681640625" y="2507.5">CscH</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6717" y="2540.5">«Create»+CscH._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6717" y="2555.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6717" y="2570.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6717" y="2585.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6717" y="2600.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6719" y="2351" width="392.83642578125" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6712" y="2344" width="392.83642578125" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6712 2344 L 7104.83642578125 2344 L 7104.83642578125 2461 L 6712 2461 L 6712 2344 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6712 2369 L 7104.83642578125 2369" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6712 2379 L 7104.83642578125 2379" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6892.523681640625" y="2363.5">SecH</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6717" y="2396.5">«Create»+SecH._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6717" y="2411.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6717" y="2426.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6717" y="2441.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6717" y="2456.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="6719" y="2631" width="390.66552734375" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="6712" y="2624" width="390.66552734375" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6712 2624 L 7102.66552734375 2624 L 7102.66552734375 2741 L 6712 2741 L 6712 2624 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6712 2649 L 7102.66552734375 2649" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 6712 2659 L 7102.66552734375 2659" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="6892.523681640625" y="2643.5">CtgH</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6717" y="2676.5">«Create»+CtgH._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6717" y="2691.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6717" y="2706.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6717" y="2721.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="6717" y="2736.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4631" y="2335" width="402.224609375" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="4624" y="2328" width="402.224609375" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4624 2328 L 5026.224609375 2328 L 5026.224609375 2445 L 4624 2445 L 4624 2328 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4624 2353 L 5026.224609375 2353" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4624 2363 L 5026.224609375 2363" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="4804.523681640625" y="2347.5">ArSinH</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4629" y="2380.5">«Create»+ArSinH._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4629" y="2395.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4629" y="2410.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4629" y="2425.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4629" y="2440.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4623" y="2503" width="406.5537109375" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="4616" y="2496" width="406.5537109375" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4616 2496 L 5022.5537109375 2496 L 5022.5537109375 2613 L 4616 2613 L 4616 2496 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4616 2521 L 5022.5537109375 2521" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4616 2531 L 5022.5537109375 2531" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="4796.523681640625" y="2515.5">ArCosH</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4621" y="2548.5">«Create»+ArCosH._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4621" y="2563.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4621" y="2578.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4621" y="2593.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4621" y="2608.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="5111" y="2583" width="394.27734375" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="5104" y="2576" width="394.27734375" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5104 2576 L 5498.27734375 2576 L 5498.27734375 2693 L 5104 2693 L 5104 2576 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5104 2601 L 5498.27734375 2601" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5104 2611 L 5498.27734375 2611" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="5279.82958984375" y="2595.5">ArCtgH</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5109" y="2628.5">«Create»+ArCtgH._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5109" y="2643.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5109" y="2658.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5109" y="2673.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5109" y="2688.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4631" y="2639" width="404.3955078125" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="4624" y="2632" width="404.3955078125" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4624 2632 L 5028.3955078125 2632 L 5028.3955078125 2749 L 4624 2749 L 4624 2632 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4624 2657 L 5028.3955078125 2657" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4624 2667 L 5028.3955078125 2667" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="4804.523681640625" y="2651.5">ArTanH</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4629" y="2684.5">«Create»+ArTanH._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4629" y="2699.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4629" y="2714.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4629" y="2729.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4629" y="2744.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="5079" y="2287" width="436.8955078125" height="117" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#952bff" stroke="none" x="5072" y="2280" width="436.8955078125" height="117"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5072 2280 L 5508.8955078125 2280 L 5508.8955078125 2397 L 5072 2397 L 5072 2280 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5072 2305 L 5508.8955078125 2305" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5072 2315 L 5508.8955078125 2315" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="5268.05322265625" y="2299.5">ArSecH</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5077" y="2332.5">«Create»+ArSecHArSinH._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5077" y="2347.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5077" y="2362.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5077" y="2377.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5077" y="2392.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="5015" y="663" width="388.50732421875" height="160" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#c082ff" stroke="none" x="5008" y="656" width="388.50732421875" height="160"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5008 656 L 5396.50732421875 656 L 5396.50732421875 816 L 5008 816 L 5008 656 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5008 681 L 5396.50732421875 681" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5008 704 L 5396.50732421875 704" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="5188.523681640625" y="675.5">Root</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5013" y="698.5">+operand: final BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5013" y="721.5">«Create»+Root._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5013" y="736.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5013" y="751.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5013" y="766.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5013" y="781.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5013" y="796.5">«get»+defaultParameters(): SplayTreeSet&lt;Variable&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5013" y="811.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4527" y="423" width="349.22802734375" height="188" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#c082ff" stroke="none" x="4520" y="416" width="349.22802734375" height="188"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4520 416 L 4869.22802734375 416 L 4869.22802734375 604 L 4520 604 L 4520 416 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4520 454 L 4869.22802734375 454" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4520 477 L 4869.22802734375 477" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4651.976806640625" y="433.5">«Comparable»</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="4671.248291015625" y="448.5">Variable</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4525" y="471.5">+name: final String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4525" y="494.5">«Create»+Variable._(name: String, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4525" y="509.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4525" y="524.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4525" y="539.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4525" y="554.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4525" y="569.5">«get»+defaultParameters(): SplayTreeSet&lt;Variable&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4525" y="584.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4525" y="599.5">+compareTo(other: Object): int</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4791" y="1551" width="509.9189453125" height="175" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#c082ff" stroke="none" x="4784" y="1544" width="509.9189453125" height="175"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4784 1544 L 5293.9189453125 1544 L 5293.9189453125 1719 L 4784 1719 L 4784 1544 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4784 1569 L 5293.9189453125 1569" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4784 1607 L 5293.9189453125 1607" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="5028.114501953125" y="1563.5">Log</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4789" y="1586.5">+base: final BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4789" y="1601.5">+operand: final BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4789" y="1624.5">«Create»+Log._(operand: BSFunction, base: final BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4789" y="1639.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4789" y="1654.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4789" y="1669.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4789" y="1684.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4789" y="1699.5">«get»+defaultParameters(): SplayTreeSet&lt;Variable&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4789" y="1714.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4367" y="1655" width="402.2373046875" height="175" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#c082ff" stroke="none" x="4360" y="1648" width="402.2373046875" height="175"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4360 1648 L 4762.2373046875 1648 L 4762.2373046875 1823 L 4360 1823 L 4360 1648 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4360 1673 L 4762.2373046875 1673" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4360 1696 L 4762.2373046875 1696" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="4535.464599609375" y="1667.5">Negative</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4365" y="1690.5">+operand: final BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4365" y="1713.5">«Create»-Negative._(operand: BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4365" y="1728.5">«Create»+Negative(operand: BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4365" y="1743.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4365" y="1758.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4365" y="1773.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4365" y="1788.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4365" y="1803.5">«get»+defaultParameters(): SplayTreeSet&lt;Variable&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4365" y="1818.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4199" y="431" width="316.4423828125" height="98" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#c082ff" stroke="none" x="4192" y="424" width="316.4423828125" height="98"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4192 424 L 4508.4423828125 424 L 4508.4423828125 522 L 4192 522 L 4192 424 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4192 462 L 4508.4423828125 462" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4192 485 L 4508.4423828125 485" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4314.44580078125" y="441.5">«Exception»</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="4281.94580078125" y="456.5">BetascriptFunctionError</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="479.5">+_message: final String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="502.5">«Create»+BetascriptFunctionError(_message: String)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="517.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="5335" y="431" width="580.0224609375" height="175" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#c082ff" stroke="none" x="5328" y="424" width="580.0224609375" height="175"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5328 424 L 5908.0224609375 424 L 5908.0224609375 599 L 5328 599 L 5328 424 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5328 449 L 5908.0224609375 449" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5328 487 L 5908.0224609375 487" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="5575.005859375" y="443.5">Exponentiation</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5333" y="466.5">+base: final BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5333" y="481.5">+exponent: final BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5333" y="504.5">«Create»+Exponentiation._(exponent: BSFunction, base: final BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5333" y="519.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5333" y="534.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5333" y="549.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5333" y="564.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5333" y="579.5">«get»+defaultParameters(): SplayTreeSet&lt;Variable&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5333" y="594.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4543" y="1007" width="50.919921875" height="44" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffffff" stroke="none" x="4536" y="1000" width="50.919921875" height="44"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4536 1000 L 4586.919921875 1000 L 4586.919921875 1044 L 4536 1044 L 4536 1000 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4536 1025 L 4586.919921875 1025" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4536 1035 L 4586.919921875 1035" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="4541.591796875" y="1019.5">Class9</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="5655" y="1319" width="471.6171875" height="264" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#c082ff" stroke="none" x="5648" y="1312" width="471.6171875" height="264"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5648 1312 L 6119.6171875 1312 L 6119.6171875 1576 L 5648 1576 L 5648 1312 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5648 1350 L 6119.6171875 1350" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5648 1373 L 6119.6171875 1373" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5853.457275390625" y="1329.5">«abstract»</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="5816.599609375" y="1344.5">singleOperandFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5653" y="1367.5">+operand: final BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5653" y="1390.5">«create»#singleOperandFunction(operand: BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5653" y="1405.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5653" y="1420.5">«get»+defaultParameters(): SplayTreeSet&lt;Variable&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4199" y="991" width="481.43701171875" height="533" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#c082ff" stroke="none" x="4192" y="984" width="481.43701171875" height="533"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4192 984 L 4673.43701171875 984 L 4673.43701171875 1517 L 4192 1517 L 4192 984 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4192 1022 L 4673.43701171875 1022" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4192 1045 L 4673.43701171875 1045" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4402.3671875" y="1001.5">«abstract»</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="bold" text-decoration="none" x="4399.1171875" y="1016.5">BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1039.5">-_parameters: final Set&lt;Variable&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1062.5">+call(parametersList: List&lt;BSFunction): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="4197" y="1077.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1092.5">+derivative(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1107.5">«get»+parameters(): Set&lt;Variable&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1122.5">+withParameters(p: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1137.5">+operator -(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1152.5">+operator +(other: BSFunction): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1167.5">+operator -(other: BSFunction): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1182.5">+operator *(other: BSFunction): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1197.5">+operator ^(other: BSFunction): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1212.5">+operator /(other: BSFunction): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1227.5">+operator ==(other: Objetc): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1242.5">«get»+hashCode(): int</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1257.5">+toNums(a: BSFunction, b: BSFunction, op: String): Pair&lt;num, num&gt;</text><path fill="none" stroke="#000000" d="M 4197 1257.5 L 4594.76953125 1257.5" stroke-miterlimit="10"/></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1272.5">+operator &lt;=(other: BSFunction): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1287.5">+operator &lt;(other: BSFunction): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1302.5">+operator &gt;=(other: BSFunction): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1317.5">+operator &gt;(other: BSFunction): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1332.5">+min(x: BSfunction, y: BSFunction): BSFunction</text><path fill="none" stroke="#000000" d="M 4197 1332.5 L 4473.37060546875 1332.5" stroke-miterlimit="10"/></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1347.5">+max(x: BSfunction, y: BSFunction): BSFunction</text><path fill="none" stroke="#000000" d="M 4197 1347.5 L 4476.982421875 1347.5" stroke-miterlimit="10"/></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="4197" y="1362.5">#derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="4197" y="1377.5">«Create»#BSFunction(_parameters: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="4197" y="1392.5">+evaluate(p: HashMap&lt;String, BSFunction&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1407.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="4197" y="1422.5">«get»#defaultParameters(): SplayTreeSet&lt;Variable&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="4197" y="1437.5">#copy(parameters: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1452.5">-_merge(source: BSFunction, other: BSFunction): BSFunction</text><path fill="none" stroke="#000000" d="M 4197 1452.5 L 4553.2177734375 1452.5" stroke-miterlimit="10"/></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1467.5">+extractFromNegative&lt;T extends BSFunction&gt;(f; BSFunction): Trio&lt;T, bool, bool&gt;</text><path fill="none" stroke="#000000" d="M 4197 1467.5 L 4669.43701171875 1467.5" stroke-miterlimit="10"/></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1482.5">«get»+arity(): int</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4197" y="1497.5">+callThing(interpreter: BSInterpreter, arguments: List&lt;Object&gt;): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="5215" y="1855" width="419.57275390625" height="160" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#c082ff" stroke="none" x="5208" y="1848" width="419.57275390625" height="160"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5208 1848 L 5627.57275390625 1848 L 5627.57275390625 2008 L 5208 2008 L 5208 1848 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5208 1873 L 5627.57275390625 1873" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5208 1896 L 5627.57275390625 1896" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="5404.42138671875" y="1867.5">Sum</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5213" y="1890.5">+operands: final List&lt;BSFunction&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5213" y="1913.5">«Create»-Sum._(operands: List&lt;BSFunction&gt;, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5213" y="1928.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5213" y="1943.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5213" y="1958.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5213" y="1973.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5213" y="1988.5">«get»+defaultParameters(): SplayTreeSet&lt;Variable&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5213" y="2003.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4871" y="887" width="467.986328125" height="160" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#c082ff" stroke="none" x="4864" y="880" width="467.986328125" height="160"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4864 880 L 5331.986328125 880 L 5331.986328125 1040 L 4864 1040 L 4864 880 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4864 905 L 5331.986328125 905" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4864 928 L 5331.986328125 928" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="5060.42138671875" y="899.5">Multiplication</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4869" y="922.5">+operands: final List&lt;BSFunction&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4869" y="945.5">«Create»+Multiplication._(operands: List&lt;BSFunction&gt;, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4869" y="960.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4869" y="975.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4869" y="990.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4869" y="1005.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4869" y="1020.5">«get»+defaultParameters(): SplayTreeSet&lt;Variable&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4869" y="1035.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4287" y="1879" width="478.828125" height="280" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#c082ff" stroke="none" x="4280" y="1872" width="478.828125" height="280"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4280 1872 L 4758.828125 1872 L 4758.828125 2152 L 4280 2152 L 4280 1872 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4280 1897 L 4758.828125 1897" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4280 1965 L 4758.828125 1965" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="4496.2958984375" y="1891.5">Number</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4285" y="1914.5">+isNamed: final bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4285" y="1929.5">+absvalue: final num</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4285" y="1944.5">+name: final String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4285" y="1959.5">+isInt: final bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4285" y="1982.5">«Create»-Number._(value: num, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4285" y="1997.5">«Create»-Number._named(absvalue: bool, name: String, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4285" y="2012.5">-_makeName(value: num): String</text><path fill="none" stroke="#000000" d="M 4285 2012.5 L 4476.4580078125 2012.5" stroke-miterlimit="10"/></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4285" y="2027.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4285" y="2042.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4285" y="2057.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4285" y="2072.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4285" y="2087.5">«get»+value(): num</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4285" y="2102.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4285" y="2117.5">«get»+defaultParameters(): SplayTreeSet&lt;Variable&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4285" y="2132.5">+operator ==(other: Object): bool</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4285" y="2147.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 3597 1000 L 3597 976 L 3168 976 L 3168 712 L 2886 712" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2906.325349715248 703.580964487968 L 2886 712 L 2906.325349715248 720.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 2906.325349715248 703.580964487968 L 2886 712 L 2906.325349715248 720.419035512032 L 2906.325349715248 703.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#d6adff" stroke="none" d="M 4248 696 L 4484 696 L 4494 706 L 4494 836 L 4248 836 L 4248 696"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4248 696 L 4484 696 L 4494 706 L 4494 836 L 4248 836 L 4248 696 L 4248 696" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4484 696 L 4484 706 L 4494 706 L 4484 696" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4253" y="714">Every class that extends BSFunction</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4253" y="727">should be instanciated through the</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4253" y="740">function that (usually) has the same</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4253" y="753">name as the class but in lower camel</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4253" y="766">case and the same parameters as the</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4253" y="779">class' constructor, except Sum,</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4253" y="792">Multiplication, Negative, Division, and</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4253" y="805">Exponentiation, which should be</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4253" y="818">instanciated through the respective</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4253" y="831">operators (+, *, -, / and ^, respectively)</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#ff2b95" d="M 4344 984 L 4344 837" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 4552 604 L 4552 880 L 4424 880 L 4424 984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 4415.580964487968 963.6746502847517 L 4424 984 L 4432.419035512032 963.6746502847517"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 4415.580964487968 963.6746502847517 L 4424 984 L 4432.419035512032 963.6746502847517 L 4415.580964487968 963.6746502847517" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4895" y="439" width="395.00732421875" height="160" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#c082ff" stroke="none" x="4888" y="432" width="395.00732421875" height="160"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4888 432 L 5283.00732421875 432 L 5283.00732421875 592 L 4888 592 L 4888 432 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4888 457 L 5283.00732421875 457" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4888 480 L 5283.00732421875 480" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="5063.464599609375" y="451.5">Signum</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4893" y="474.5">+operand: final BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4893" y="497.5">«Create»+Signum._(operand: BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4893" y="512.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4893" y="527.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4893" y="542.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4893" y="557.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4893" y="572.5">«get»+defaultParameters(): SplayTreeSet&lt;Variable&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4893" y="587.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5424 1848 L 5424 1256 L 4673 1256" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 4693.325349715248 1247.580964487968 L 4673 1256 L 4693.325349715248 1264.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 4693.325349715248 1247.580964487968 L 4673 1256 L 4693.325349715248 1264.419035512032 L 4693.325349715248 1247.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5768 1312 L 5768 1192 L 4673 1192" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 4693.325349715248 1183.580964487968 L 4673 1192 L 4693.325349715248 1200.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 4693.325349715248 1183.580964487968 L 4673 1192 L 4693.325349715248 1200.419035512032 L 4693.325349715248 1183.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 4952 592 L 4952 744 L 4568 744 L 4568 984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 4559.580964487968 963.6746502847517 L 4568 984 L 4576.419035512032 963.6746502847517"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 4559.580964487968 963.6746502847517 L 4568 984 L 4576.419035512032 963.6746502847517 L 4559.580964487968 963.6746502847517" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5008 800 L 4656 800 L 4656 984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 4647.580964487968 963.6746502847517 L 4656 984 L 4664.419035512032 963.6746502847517"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 4647.580964487968 963.6746502847517 L 4656 984 L 4664.419035512032 963.6746502847517 L 4647.580964487968 963.6746502847517" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 4304 1872 L 4304 1517" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 4312.419035512032 1537.3253497152482 L 4304 1517 L 4295.580964487968 1537.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 4312.419035512032 1537.3253497152482 L 4304 1517 L 4295.580964487968 1537.3253497152482 L 4312.419035512032 1537.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4759 2059 L 4888 2059 L 4888 1951" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 4892.209517756016 1961.162674857624 L 4888 1951 L 4883.790482243984 1961.162674857624 L 4888 1973"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4892.209517756016 1961.162674857624 L 4888 1951 L 4883.790482243984 1961.162674857624 L 4888 1973 L 4892.209517756016 1961.162674857624" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4769.162674857625 2054.790482243984 L 4759 2059 L 4769.162674857625 2063.209517756016" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4776.5" y="2077.5">3</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4896.5" y="1978.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4839" y="1855" width="226.8896484375" height="103" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#c082ff" stroke="none" x="4832" y="1848" width="226.8896484375" height="103"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4832 1848 L 5058.8896484375 1848 L 5058.8896484375 1951 L 4832 1951 L 4832 1848 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4832 1873 L 5058.8896484375 1873" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4832 1941 L 5058.8896484375 1941" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="4916.178955078125" y="1867.5">Constants</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4837" y="1890.5">+e: Number {readOnly}</text><path fill="none" stroke="#000000" d="M 4837 1890.5 L 4970.326171875 1890.5" stroke-miterlimit="10"/></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4837" y="1905.5">+pi: Number {readOnly}</text><path fill="none" stroke="#000000" d="M 4837 1905.5 L 4973.21435546875 1905.5" stroke-miterlimit="10"/></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4837" y="1920.5">+infinity: Number {readOnly}</text><path fill="none" stroke="#000000" d="M 4837 1920.5 L 4999.9443359375 1920.5" stroke-miterlimit="10"/></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4837" y="1935.5">+negativeInfinity: Negative {readOnly}</text><path fill="none" stroke="#000000" d="M 4837 1935.5 L 5054.8896484375 1935.5" stroke-miterlimit="10"/></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4440 1648 L 4440 1517" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 4448.419035512032 1537.3253497152482 L 4440 1517 L 4431.580964487968 1537.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4448.419035512032 1537.3253497152482 L 4440 1517 L 4431.580964487968 1537.3253497152482 L 4448.419035512032 1537.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 4864 992 L 4673 992" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 4693.325349715248 983.580964487968 L 4673 992 L 4693.325349715248 1000.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 4693.325349715248 983.580964487968 L 4673 992 L 4693.325349715248 1000.419035512032 L 4693.325349715248 983.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4762 1775 L 4984 1775 L 4984 1848" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 4979.790482243984 1837.837325142376 L 4984 1848 L 4988.209517756016 1837.837325142376 L 4984 1826"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4979.790482243984 1837.837325142376 L 4984 1848 L 4988.209517756016 1837.837325142376 L 4984 1826 L 4979.790482243984 1837.837325142376" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4772.162674857625 1770.7904822439841 L 4762 1775 L 4772.162674857625 1779.2095177560159" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4779.5" y="1793.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4967.5" y="1832.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 4784 1592 L 4536 1592 L 4536 1517" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 4544.419035512032 1537.3253497152482 L 4536 1517 L 4527.580964487968 1537.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 4544.419035512032 1537.3253497152482 L 4536 1517 L 4527.580964487968 1537.3253497152482 L 4544.419035512032 1537.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="5471" y="679" width="629.85791015625" height="175" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#c082ff" stroke="none" x="5464" y="672" width="629.85791015625" height="175"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5464 672 L 6093.85791015625 672 L 6093.85791015625 847 L 5464 847 L 5464 672 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5464 697 L 6093.85791015625 697" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 5464 735 L 6093.85791015625 735" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="5756.172607421875" y="691.5">Division</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5469" y="714.5">+numerator: final BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5469" y="729.5">+denominator: final BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5469" y="752.5">«Create»+Division._(numerator: BSFunction, denominator: final BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5469" y="767.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5469" y="782.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5469" y="797.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5469" y="812.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5469" y="827.5">«get»+defaultParameters(): SplayTreeSet&lt;Variable&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5469" y="842.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5424 599 L 5424 1048 L 4673 1048" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 4693.325349715248 1039.580964487968 L 4673 1048 L 4693.325349715248 1056.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 4693.325349715248 1039.580964487968 L 4673 1048 L 4693.325349715248 1056.419035512032 L 4693.325349715248 1039.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5640 847 L 5640 1120 L 4673 1120" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 4693.325349715248 1111.580964487968 L 4673 1120 L 4693.325349715248 1128.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 4693.325349715248 1111.580964487968 L 4673 1120 L 4693.325349715248 1128.419035512032 L 4693.325349715248 1111.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 4816 1416 L 4673 1416" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 4693.325349715248 1407.580964487968 L 4673 1416 L 4693.325349715248 1424.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 4693.325349715248 1407.580964487968 L 4673 1416 L 4693.325349715248 1424.419035512032 L 4693.325349715248 1407.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="4823" y="1367" width="443.92236328125" height="160" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#c082ff" stroke="none" x="4816" y="1360" width="443.92236328125" height="160"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4816 1360 L 5259.92236328125 1360 L 5259.92236328125 1520 L 4816 1520 L 4816 1360 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4816 1385 L 5259.92236328125 1385" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#330066" d="M 4816 1408 L 5259.92236328125 1408" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="4996.523681640625" y="1379.5">AbsoluteValue</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4821" y="1402.5">+operand: final BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4821" y="1425.5">«Create»+AbsoluteValue._(operand; BSFunction, params: Set&lt;Variable&gt;)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4821" y="1440.5">+evaluate(p: HashMap): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4821" y="1455.5">+derivativeInternal(v: Variable): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4821" y="1470.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4821" y="1485.5">+copy(params: Set&lt;Variable&gt;): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4821" y="1500.5">«get»+defaultParameters(): SplayTreeSet&lt;Variable&gt;</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4821" y="1515.5">«get»+approx(): BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5026 2424 L 5696 2424 L 5696 1576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 5704.419035512032 1596.3253497152482 L 5696 1576 L 5687.580964487968 1596.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5704.419035512032 1596.3253497152482 L 5696 1576 L 5687.580964487968 1596.3253497152482 L 5704.419035512032 1596.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5023 2570 L 5752 2570 L 5752 1576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 5760.419035512032 1596.3253497152482 L 5752 1576 L 5743.580964487968 1596.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5760.419035512032 1596.3253497152482 L 5752 1576 L 5743.580964487968 1596.3253497152482 L 5760.419035512032 1596.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5028 2714 L 5816 2714 L 5816 1576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 5824.419035512032 1596.3253497152482 L 5816 1576 L 5807.580964487968 1596.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5824.419035512032 1596.3253497152482 L 5816 1576 L 5807.580964487968 1596.3253497152482 L 5824.419035512032 1596.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5509 2370 L 5672 2370 L 5672 1576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 5680.419035512032 1596.3253497152482 L 5672 1576 L 5663.580964487968 1596.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5680.419035512032 1596.3253497152482 L 5672 1576 L 5663.580964487968 1596.3253497152482 L 5680.419035512032 1596.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5492 2498 L 5728 2498 L 5728 1576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 5736.419035512032 1596.3253497152482 L 5728 1576 L 5719.580964487968 1596.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5736.419035512032 1596.3253497152482 L 5728 1576 L 5719.580964487968 1596.3253497152482 L 5736.419035512032 1596.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5498 2650 L 5776 2650 L 5776 1576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 5784.419035512032 1596.3253497152482 L 5776 1576 L 5767.580964487968 1596.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5784.419035512032 1596.3253497152482 L 5776 1576 L 5767.580964487968 1596.3253497152482 L 5784.419035512032 1596.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6168 2648 L 5888 2648 L 5888 1576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 5896.419035512032 1596.3253497152482 L 5888 1576 L 5879.580964487968 1596.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5896.419035512032 1596.3253497152482 L 5888 1576 L 5879.580964487968 1596.3253497152482 L 5896.419035512032 1596.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6160 2480 L 5968 2480 L 5968 1576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 5976.419035512032 1596.3253497152482 L 5968 1576 L 5959.580964487968 1596.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5976.419035512032 1596.3253497152482 L 5968 1576 L 5959.580964487968 1596.3253497152482 L 5976.419035512032 1596.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6712 2712 L 5856 2712 L 5856 1576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 5864.419035512032 1596.3253497152482 L 5856 1576 L 5847.580964487968 1596.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5864.419035512032 1596.3253497152482 L 5856 1576 L 5847.580964487968 1596.3253497152482 L 5864.419035512032 1596.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6712 2560 L 5928 2560 L 5928 1576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 5936.419035512032 1596.3253497152482 L 5928 1576 L 5919.580964487968 1596.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5936.419035512032 1596.3253497152482 L 5928 1576 L 5919.580964487968 1596.3253497152482 L 5936.419035512032 1596.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6712 2408 L 6000 2408 L 6000 1576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 6008.419035512032 1596.3253497152482 L 6000 1576 L 5991.580964487968 1596.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6008.419035512032 1596.3253497152482 L 6000 1576 L 5991.580964487968 1596.3253497152482 L 6008.419035512032 1596.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6176 2344 L 6032 2344 L 6032 1576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 6040.419035512032 1596.3253497152482 L 6032 1576 L 6023.580964487968 1596.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6040.419035512032 1596.3253497152482 L 6032 1576 L 6023.580964487968 1596.3253497152482 L 6040.419035512032 1596.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6240 1640 L 6096 1640 L 6096 1576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 6104.419035512032 1596.3253497152482 L 6096 1576 L 6087.580964487968 1596.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6104.419035512032 1596.3253497152482 L 6096 1576 L 6087.580964487968 1596.3253497152482 L 6104.419035512032 1596.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6240 1444 L 6120 1444" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 6140.325349715248 1435.580964487968 L 6120 1444 L 6140.325349715248 1452.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6140.325349715248 1435.580964487968 L 6120 1444 L 6140.325349715248 1452.419035512032 L 6140.325349715248 1435.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6224 1344 L 6120 1344" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 6140.325349715248 1335.580964487968 L 6120 1344 L 6140.325349715248 1352.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6140.325349715248 1335.580964487968 L 6120 1344 L 6140.325349715248 1352.419035512032 L 6140.325349715248 1335.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6768 1400 L 6120 1400" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 6140.325349715248 1391.580964487968 L 6120 1400 L 6140.325349715248 1408.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6140.325349715248 1391.580964487968 L 6120 1400 L 6140.325349715248 1408.419035512032 L 6140.325349715248 1391.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6768 1552 L 6120 1552" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 6140.325349715248 1543.580964487968 L 6120 1552 L 6140.325349715248 1560.419035512032"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6140.325349715248 1543.580964487968 L 6120 1552 L 6140.325349715248 1560.419035512032 L 6140.325349715248 1543.580964487968" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6768 1720 L 6056 1720 L 6056 1576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 6064.419035512032 1596.3253497152482 L 6056 1576 L 6047.580964487968 1596.3253497152482"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6064.419035512032 1596.3253497152482 L 6056 1576 L 6047.580964487968 1596.3253497152482 L 6064.419035512032 1596.3253497152482" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6240 552 L 6112 552 L 6112 952 L 5963 952 L 5963 1312" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 5954.580964487968 1291.6746502847518 L 5963 1312 L 5971.419035512032 1291.6746502847518"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5954.580964487968 1291.6746502847518 L 5963 1312 L 5971.419035512032 1291.6746502847518 L 5954.580964487968 1291.6746502847518" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6240 704 L 6136 704 L 6136 984 L 5992 984 L 5992 1312" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 5983.580964487968 1291.6746502847518 L 5992 1312 L 6000.419035512032 1291.6746502847518"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 5983.580964487968 1291.6746502847518 L 5992 1312 L 6000.419035512032 1291.6746502847518 L 5983.580964487968 1291.6746502847518" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6240 840 L 6168 840 L 6168 1008 L 6016 1008 L 6016 1312" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 6007.580964487968 1291.6746502847518 L 6016 1312 L 6024.419035512032 1291.6746502847518"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6007.580964487968 1291.6746502847518 L 6016 1312 L 6024.419035512032 1291.6746502847518 L 6007.580964487968 1291.6746502847518" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6760 568 L 6696 568 L 6696 1040 L 6040 1040 L 6040 1312" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 6031.580964487968 1291.6746502847518 L 6040 1312 L 6048.419035512032 1291.6746502847518"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6031.580964487968 1291.6746502847518 L 6040 1312 L 6048.419035512032 1291.6746502847518 L 6031.580964487968 1291.6746502847518" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6760 712 L 6728 712 L 6728 1080 L 6064 1080 L 6064 1312" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 6055.580964487968 1291.6746502847518 L 6064 1312 L 6072.419035512032 1291.6746502847518"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6055.580964487968 1291.6746502847518 L 6064 1312 L 6072.419035512032 1291.6746502847518 L 6055.580964487968 1291.6746502847518" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6792 893 L 6792 1112 L 6096 1112 L 6096 1312" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 6087.580964487968 1291.6746502847518 L 6096 1312 L 6104.419035512032 1291.6746502847518"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#707070" d="M 6087.580964487968 1291.6746502847518 L 6096 1312 L 6104.419035512032 1291.6746502847518 L 6087.580964487968 1291.6746502847518" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4608 1517 L 4608 1576 L 4784 1576" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 4773.837325142375 1580.2095177560159 L 4784 1576 L 4773.837325142375 1571.7904822439841 L 4762 1576"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4773.837325142375 1580.2095177560159 L 4784 1576 L 4773.837325142375 1571.7904822439841 L 4762 1576 L 4773.837325142375 1580.2095177560159" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4612.209517756016 1527.162674857624 L 4608 1517 L 4603.790482243984 1527.162674857624" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4591.5" y="1544.5">2</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4758.5" y="1594.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4496 1517 L 4496 1648" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 4491.790482243984 1637.837325142376 L 4496 1648 L 4500.209517756016 1637.837325142376 L 4496 1626"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4491.790482243984 1637.837325142376 L 4496 1648 L 4500.209517756016 1637.837325142376 L 4496 1626 L 4491.790482243984 1637.837325142376" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4500.209517756016 1527.162674857624 L 4496 1517 L 4491.790482243984 1527.162674857624" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4479.5" y="1544.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4479.5" y="1632.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4673 1376 L 4816 1376" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 4805.837325142375 1380.2095177560159 L 4816 1376 L 4805.837325142375 1371.7904822439841 L 4794 1376"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4805.837325142375 1380.2095177560159 L 4816 1376 L 4805.837325142375 1371.7904822439841 L 4794 1376 L 4805.837325142375 1380.2095177560159" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4683.162674857625 1371.7904822439841 L 4673 1376 L 4683.162674857625 1380.2095177560159" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4690.5" y="1394.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4790.5" y="1394.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4673 1280 L 5320 1280 L 5320 1848" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 5315.790482243984 1837.837325142376 L 5320 1848 L 5324.209517756016 1837.837325142376 L 5320 1826"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 5315.790482243984 1837.837325142376 L 5320 1848 L 5324.209517756016 1837.837325142376 L 5320 1826 L 5315.790482243984 1837.837325142376" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4683.162674857625 1275.7904822439841 L 4673 1280 L 4683.162674857625 1284.2095177560159" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4684.5" y="1298.5">2..*</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5303.5" y="1832.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4673 1224 L 5752 1224 L 5752 1312" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 5747.790482243984 1301.837325142376 L 5752 1312 L 5756.209517756016 1301.837325142376 L 5752 1290"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 5747.790482243984 1301.837325142376 L 5752 1312 L 5756.209517756016 1301.837325142376 L 5752 1290 L 5747.790482243984 1301.837325142376" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4683.162674857625 1219.7904822439841 L 4673 1224 L 4683.162674857625 1228.2095177560159" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4690.5" y="1242.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5735.5" y="1296.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4673 1016 L 4864 1016" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 4853.837325142375 1020.209517756016 L 4864 1016 L 4853.837325142375 1011.790482243984 L 4842 1016"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4853.837325142375 1020.209517756016 L 4864 1016 L 4853.837325142375 1011.790482243984 L 4842 1016 L 4853.837325142375 1020.209517756016" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4683.162674857625 1011.790482243984 L 4673 1016 L 4683.162674857625 1020.209517756016" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4684.5" y="1034.5">2..*</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4838.5" y="1034.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4673 1144 L 5752 1144 L 5752 847" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 5756.209517756016 857.1626748576241 L 5752 847 L 5747.790482243984 857.1626748576241 L 5752 869"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 5756.209517756016 857.1626748576241 L 5752 847 L 5747.790482243984 857.1626748576241 L 5752 869 L 5756.209517756016 857.1626748576241" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4683.162674857625 1139.7904822439841 L 4673 1144 L 4683.162674857625 1148.2095177560159" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4684.5" y="1162.5">2..*</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5760.5" y="874.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4673 1072 L 5440 1072 L 5440 599" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 5444.209517756016 609.1626748576241 L 5440 599 L 5435.790482243984 609.1626748576241 L 5440 621"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 5444.209517756016 609.1626748576241 L 5440 599 L 5435.790482243984 609.1626748576241 L 5440 621 L 5444.209517756016 609.1626748576241" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4683.162674857625 1067.7904822439841 L 4673 1072 L 4683.162674857625 1076.2095177560159" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4690.5" y="1090.5">2</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5448.5" y="626.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4616 984 L 4616 776 L 5008 776" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 4997.837325142375 780.209517756016 L 5008 776 L 4997.837325142375 771.790482243984 L 4986 776"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4997.837325142375 780.209517756016 L 5008 776 L 4997.837325142375 771.790482243984 L 4986 776 L 4997.837325142375 780.209517756016" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4611.790482243984 973.8373251423759 L 4616 984 L 4620.209517756016 973.8373251423759" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4624.5" y="968.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4982.5" y="794.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4584 984 L 4584 760 L 4968 760 L 4968 592" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 4972.209517756016 602.1626748576241 L 4968 592 L 4963.790482243984 602.1626748576241 L 4968 614"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4972.209517756016 602.1626748576241 L 4968 592 L 4963.790482243984 602.1626748576241 L 4968 614 L 4972.209517756016 602.1626748576241" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4579.790482243984 973.8373251423759 L 4584 984 L 4588.209517756016 973.8373251423759" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4592.5" y="968.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4976.5" y="619.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 1584 1259 L 1584 1280 L 1992 1280 L 1992 1352 L 4192 1352" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 4181.837325142375 1356.2095177560159 L 4192 1352 L 4181.837325142375 1347.7904822439841" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1988.5" y="1285.5">+uses</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 4259 1517 L 4259 3960 L 2675 3960 L 2675 3811" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 2679.209517756016 3821.162674857624 L 2675 3811 L 2670.790482243984 3821.162674857624" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3448.5" y="3981.5">+uses</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 4272 1517 L 4272 3976 L 2504 3976 L 2504 3613" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 2508.209517756016 3623.162674857624 L 2504 3613 L 2499.790482243984 3623.162674857624" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3369.5" y="3997.5">+uses</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 1584 2728 L 1584 2480 L 3968 2480 L 3968 1408 L 4192 1408" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 4181.837325142375 1412.2095177560159 L 4192 1408 L 4181.837325142375 1403.7904822439841" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3920.5" y="2485.5">+compares</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1593.220458984375" y="2712.5">*</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4166.5" y="1426.5">2</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4192 1448 L 4016 1448 L 4016 2601 L 3613 2601" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 3623.162674857624 2596.790482243984 L 3613 2601 L 3623.162674857624 2605.209517756016 L 3635 2601"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 3623.162674857624 2596.790482243984 L 3613 2601 L 3623.162674857624 2605.209517756016 L 3635 2601 L 3623.162674857624 2596.790482243984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4160.5" y="1441.5">1..*</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3630.5" y="2594.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 4216 984 L 4216 522" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 4220.209517756016 532.1626748576241 L 4216 522 L 4211.790482243984 532.1626748576241" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4180.5" y="757.5">+throws</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 4520 592 L 4400 592 L 4400 522" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 4404.209517756016 532.1626748576241 L 4400 522 L 4395.790482243984 532.1626748576241" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4362.5" y="597.5">+throws</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4192 1504 L 4112 1504 L 4112 3015 L 3810 3015" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="#00ad00" stroke="none" d="M 3820.162674857624 3010.790482243984 L 3810 3015 L 3820.162674857624 3019.209517756016 L 3832 3015"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 3820.162674857624 3010.790482243984 L 3810 3015 L 3820.162674857624 3019.209517756016 L 3832 3015 L 3820.162674857624 3010.790482243984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#00ad00" d="M 4181.837325142375 1508.2095177560159 L 4192 1504 L 4181.837325142375 1499.7904822439841" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4166.5" y="1497.5">2</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3827.5" y="3008.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 3810 3056 L 4152 3056 L 4152 464 L 4192 464" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 4181.837325142375 468.209517756016 L 4192 464 L 4181.837325142375 459.790482243984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 1528 2728 L 1528 2456 L 4056 2456 L 4056 496 L 4192 496" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#0000d1" d="M 4181.837325142375 500.209517756016 L 4192 496 L 4181.837325142375 491.790482243984" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4018.5" y="2461.5">+throws</text></g></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3399" y="1007" width="410.38134765625" height="115" opacity="0.2"/></g><g transform="translate(10,-46) scale(1,1)"><rect fill="#ffa182" stroke="none" x="3392" y="1000" width="410.38134765625" height="115"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3392 1000 L 3802.38134765625 1000 L 3802.38134765625 1115 L 3392 1115 L 3392 1000 Z Z" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3392 1025 L 3802.38134765625 1025" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#700000" d="M 3392 1048 L 3802.38134765625 1048" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3549.494384765625" y="1019.5">FunctionAdapter</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3397" y="1042.5">+adaptee: final BSFunction</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3397" y="1065.5">«Create»+FunctionAdapter(adaptee: BSFunction)</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3397" y="1080.5">+arity(): int</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3397" y="1095.5">+callThing(interpreter BSInterpreter, arguments: List&lt;Object&gt;): Object</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3397" y="1110.5">+toString(): String</text></g></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 3696 1115 L 3696 1195 L 4192 1195" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><path fill="none" stroke="#cc9900" d="M 4181.837325142375 1199.2095177560159 L 4192 1195 L 4181.837325142375 1190.7904822439841" stroke-miterlimit="10"/></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3672.5" y="1186.5">+adapts</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3679.5" y="1142.5">1</text></g></g><g transform="translate(10,-46) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4166.5" y="1213.5">1</text></g></g></g></svg>